{"ast":null,"code":"var _jsxFileName = \"/home/konnorkooi/code/schedule-optimizer/schedule-opt/frontend/src/components/ScheduleTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ScheduleTable = ({\n  schedule,\n  currentSchedule,\n  totalSchedules\n}) => {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  const hours = [\"08:00\", \"09:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\"];\n  const fullDaysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n  useEffect(() => {\n    if (schedule && schedule.courses) {\n      updateScheduleDisplay(schedule);\n    }\n  }, [schedule, currentSchedule]);\n  const updateScheduleDisplay = schedule => {\n    const newTableData = hours.map(hour => {\n      const rowData = {\n        time: hour\n      };\n      fullDaysOfWeek.forEach(day => {\n        rowData[day] = {\n          content: null,\n          color: \"\"\n        };\n      });\n      return rowData;\n    });\n    schedule.courses.forEach(course => {\n      const days = course.days.split(\"\");\n      const startTime = parseInt(course.start_time);\n      const endTime = parseInt(course.end_time);\n      days.forEach(day => {\n        const fullDay = fullDaysOfWeek.find(d => d.startsWith(day));\n        for (let time = startTime; time < endTime; time += 100) {\n          const hour = `${Math.floor(time / 100).toString().padStart(2, \"0\")}:00`;\n          const rowIndex = hours.indexOf(hour);\n          if (rowIndex !== -1) {\n            newTableData[rowIndex][fullDay] = {\n              content: {\n                title: course.subject,\n                details: `${course.instructor}\\n${course.crn}\\n${course.room}`\n              },\n              color: course.color || \"lightgreen\"\n            };\n          }\n        }\n      });\n    });\n    setTableData(newTableData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full overflow-x-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"w-full border-collapse\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border border-gray-300 p-2 text-center font-bold\",\n            children: [\"Schedule \", currentSchedule + 1, \" of \", totalSchedules]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), fullDaysOfWeek.map(day => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border border-gray-300 p-2 text-center font-bold\",\n            children: day\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableData.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border border-gray-300 p-2 text-center font-bold\",\n            children: row.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), fullDaysOfWeek.map(day => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border border-gray-300 p-2 text-center\",\n            style: {\n              backgroundColor: row[day].color\n            },\n            children: row[day].content && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-bold\",\n                children: row[day].content.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs\",\n                children: row[day].content.details\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true)\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(ScheduleTable, \"qcVQMfdRY2vxgSp5dutEfuJRk7k=\");\n_c = ScheduleTable;\nexport default ScheduleTable;\nvar _c;\n$RefreshReg$(_c, \"ScheduleTable\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ScheduleTable","schedule","currentSchedule","totalSchedules","_s","tableData","setTableData","hours","fullDaysOfWeek","courses","updateScheduleDisplay","newTableData","map","hour","rowData","time","forEach","day","content","color","course","days","split","startTime","parseInt","start_time","endTime","end_time","fullDay","find","d","startsWith","Math","floor","toString","padStart","rowIndex","indexOf","title","subject","details","instructor","crn","room","className","children","fileName","_jsxFileName","lineNumber","columnNumber","row","index","style","backgroundColor","_c","$RefreshReg$"],"sources":["/home/konnorkooi/code/schedule-optimizer/schedule-opt/frontend/src/components/ScheduleTable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst ScheduleTable = ({ schedule, currentSchedule, totalSchedules }) => {\n    const [tableData, setTableData] = useState([]);\n    const hours = [\n        \"08:00\",\n        \"09:00\",\n        \"10:00\",\n        \"11:00\",\n        \"12:00\",\n        \"13:00\",\n        \"14:00\",\n        \"15:00\",\n        \"16:00\",\n        \"17:00\",\n    ];\n    const fullDaysOfWeek = [\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\",\n        \"Thursday\",\n        \"Friday\",\n    ];\n\n    useEffect(() => {\n        if (schedule && schedule.courses) {\n            updateScheduleDisplay(schedule);\n        }\n    }, [schedule, currentSchedule]);\n\n    const updateScheduleDisplay = (schedule) => {\n        const newTableData = hours.map((hour) => {\n            const rowData = { time: hour };\n            fullDaysOfWeek.forEach((day) => {\n                rowData[day] = { content: null, color: \"\" };\n            });\n            return rowData;\n        });\n\n        schedule.courses.forEach((course) => {\n            const days = course.days.split(\"\");\n            const startTime = parseInt(course.start_time);\n            const endTime = parseInt(course.end_time);\n\n            days.forEach((day) => {\n                const fullDay = fullDaysOfWeek.find((d) => d.startsWith(day));\n                for (let time = startTime; time < endTime; time += 100) {\n                    const hour = `${Math.floor(time / 100)\n                        .toString()\n                        .padStart(2, \"0\")}:00`;\n                    const rowIndex = hours.indexOf(hour);\n                    if (rowIndex !== -1) {\n                        newTableData[rowIndex][fullDay] = {\n                            content: {\n                                title: course.subject,\n                                details: `${course.instructor}\\n${course.crn}\\n${course.room}`,\n                            },\n                            color: course.color || \"lightgreen\",\n                        };\n                    }\n                }\n            });\n        });\n\n        setTableData(newTableData);\n    };\n\n    return (\n        <div className=\"w-full overflow-x-auto\">\n            <table className=\"w-full border-collapse\">\n                <thead>\n                    <tr className=\"bg-gray-200\">\n                        <th className=\"border border-gray-300 p-2 text-center font-bold\">\n                            Schedule {currentSchedule + 1} of {totalSchedules}\n                        </th>\n                        {fullDaysOfWeek.map((day) => (\n                            <th\n                                key={day}\n                                className=\"border border-gray-300 p-2 text-center font-bold\">\n                                {day}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {tableData.map((row, index) => (\n                        <tr key={index}>\n                            <td className=\"border border-gray-300 p-2 text-center font-bold\">\n                                {row.time}\n                            </td>\n                            {fullDaysOfWeek.map((day) => (\n                                <td\n                                    key={day}\n                                    className=\"border border-gray-300 p-2 text-center\"\n                                    style={{ backgroundColor: row[day].color }}>\n                                    {row[day].content && (\n                                        <>\n                                            <div className=\"font-bold\">\n                                                {row[day].content.title}\n                                            </div>\n                                            <div className=\"text-xs\">\n                                                {row[day].content.details}\n                                            </div>\n                                        </>\n                                    )}\n                                </td>\n                            ))}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default ScheduleTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}