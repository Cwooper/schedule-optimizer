{"ast":null,"code":"var _jsxFileName = \"/home/konnorkooi/code/schedule-optimizer/schedule-opt/frontend/src/components/ScheduleTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScheduleTable = ({\n  schedule,\n  currentSchedule,\n  displaySchedule\n}) => {\n  _s();\n  const calendarRef = useRef(null);\n  useEffect(() => {\n    if (calendarRef.current) {\n      if (!calendarRef.current.querySelector(\"table\")) {\n        createTableStructure();\n      }\n      updateScheduleDisplay(schedule);\n    }\n  }, [schedule, currentSchedule, displaySchedule]);\n  const createTableStructure = () => {\n    const hours = [\"08:00\", \"09:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\"];\n    const fullDaysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n    const table = document.createElement(\"table\");\n    table.id = \"calendar-table\";\n    table.className = \"w-full border-collapse\";\n    const headerRow = table.insertRow();\n    headerRow.className = \"bg-gray-200\";\n    const cornerCell = headerRow.insertCell();\n    cornerCell.id = \"cornerCell\";\n    cornerCell.className = \"border border-gray-300 p-2 text-center font-bold\";\n    fullDaysOfWeek.forEach(day => {\n      const headerCell = headerRow.insertCell();\n      headerCell.textContent = day;\n      headerCell.className = \"border border-gray-300 p-2 text-center font-bold\";\n    });\n    hours.forEach(hour => {\n      const row = table.insertRow();\n      const hourCell = row.insertCell();\n      hourCell.textContent = hour;\n      hourCell.className = \"border border-gray-300 p-2 text-center font-bold\";\n      fullDaysOfWeek.forEach(day => {\n        const cell = row.insertCell();\n        cell.id = `${day.charAt(0)}-${hour.replace(\":\", \"\")}`;\n        cell.className = \"border border-gray-300 p-2 text-center\";\n      });\n    });\n    calendarRef.current.appendChild(table);\n  };\n  const updateScheduleDisplay = schedule => {\n    const cornerCell = document.getElementById(\"cornerCell\");\n    if (cornerCell) {\n      cornerCell.textContent = `Schedule ${currentSchedule + 1} of ${schedule.length}`;\n    }\n\n    // Clear previous schedule\n    const cells = document.querySelectorAll(\"#calendar-table td:not(:first-child)\");\n    cells.forEach(cell => {\n      cell.textContent = \"\";\n      cell.style.backgroundColor = \"\";\n    });\n\n    // Populate with new schedule data\n    schedule.courses.forEach(course => {\n      const days = course.days.split(\"\");\n      const startTime = parseInt(course.start_time);\n      const endTime = parseInt(course.end_time);\n      days.forEach(day => {\n        for (let time = startTime; time < endTime; time += 100) {\n          const cellId = `${day}-${time.toString().padStart(4, \"0\")}`;\n          const cell = document.getElementById(cellId);\n          if (cell) {\n            cell.textContent = `${course.subject}\\n${course.instructor}\\n${course.crn}\\n${course.room}`;\n            cell.style.backgroundColor = course.color || \"#lightgreen\";\n          }\n        }\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full overflow-x-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: calendarRef,\n      className: \"min-w-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n_s(ScheduleTable, \"HuswXQNKgAj2xlMza6JPwM9t0kA=\");\n_c = ScheduleTable;\nexport default ScheduleTable;\nvar _c;\n$RefreshReg$(_c, \"ScheduleTable\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","ScheduleTable","schedule","currentSchedule","displaySchedule","_s","calendarRef","current","querySelector","createTableStructure","updateScheduleDisplay","hours","fullDaysOfWeek","table","document","createElement","id","className","headerRow","insertRow","cornerCell","insertCell","forEach","day","headerCell","textContent","hour","row","hourCell","cell","charAt","replace","appendChild","getElementById","length","cells","querySelectorAll","style","backgroundColor","courses","course","days","split","startTime","parseInt","start_time","endTime","end_time","time","cellId","toString","padStart","subject","instructor","crn","room","color","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/konnorkooi/code/schedule-optimizer/schedule-opt/frontend/src/components/ScheduleTable.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\n\nconst ScheduleTable = ({ schedule, currentSchedule, displaySchedule }) => {\n    const calendarRef = useRef(null);\n\n    useEffect(() => {\n        if (calendarRef.current) {\n            if (!calendarRef.current.querySelector(\"table\")) {\n                createTableStructure();\n            }\n            updateScheduleDisplay(schedule);\n        }\n    }, [schedule, currentSchedule, displaySchedule]);\n\n    const createTableStructure = () => {\n        const hours = [\n            \"08:00\",\n            \"09:00\",\n            \"10:00\",\n            \"11:00\",\n            \"12:00\",\n            \"13:00\",\n            \"14:00\",\n            \"15:00\",\n            \"16:00\",\n            \"17:00\",\n        ];\n        const fullDaysOfWeek = [\n            \"Monday\",\n            \"Tuesday\",\n            \"Wednesday\",\n            \"Thursday\",\n            \"Friday\",\n        ];\n\n        const table = document.createElement(\"table\");\n        table.id = \"calendar-table\";\n        table.className = \"w-full border-collapse\";\n\n        const headerRow = table.insertRow();\n        headerRow.className = \"bg-gray-200\";\n        const cornerCell = headerRow.insertCell();\n        cornerCell.id = \"cornerCell\";\n        cornerCell.className =\n            \"border border-gray-300 p-2 text-center font-bold\";\n\n        fullDaysOfWeek.forEach((day) => {\n            const headerCell = headerRow.insertCell();\n            headerCell.textContent = day;\n            headerCell.className =\n                \"border border-gray-300 p-2 text-center font-bold\";\n        });\n\n        hours.forEach((hour) => {\n            const row = table.insertRow();\n            const hourCell = row.insertCell();\n            hourCell.textContent = hour;\n            hourCell.className =\n                \"border border-gray-300 p-2 text-center font-bold\";\n\n            fullDaysOfWeek.forEach((day) => {\n                const cell = row.insertCell();\n                cell.id = `${day.charAt(0)}-${hour.replace(\":\", \"\")}`;\n                cell.className = \"border border-gray-300 p-2 text-center\";\n            });\n        });\n\n        calendarRef.current.appendChild(table);\n    };\n\n    const updateScheduleDisplay = (schedule) => {\n        const cornerCell = document.getElementById(\"cornerCell\");\n        if (cornerCell) {\n            cornerCell.textContent = `Schedule ${currentSchedule + 1} of ${\n                schedule.length\n            }`;\n        }\n\n        // Clear previous schedule\n        const cells = document.querySelectorAll(\n            \"#calendar-table td:not(:first-child)\"\n        );\n        cells.forEach((cell) => {\n            cell.textContent = \"\";\n            cell.style.backgroundColor = \"\";\n        });\n\n        // Populate with new schedule data\n        schedule.courses.forEach((course) => {\n            const days = course.days.split(\"\");\n            const startTime = parseInt(course.start_time);\n            const endTime = parseInt(course.end_time);\n\n            days.forEach((day) => {\n                for (let time = startTime; time < endTime; time += 100) {\n                    const cellId = `${day}-${time.toString().padStart(4, \"0\")}`;\n                    const cell = document.getElementById(cellId);\n                    if (cell) {\n                        cell.textContent = `${course.subject}\\n${course.instructor}\\n${course.crn}\\n${course.room}`;\n                        cell.style.backgroundColor =\n                            course.color || \"#lightgreen\";\n                    }\n                }\n            });\n        });\n    };\n\n    return (\n        <div className=\"w-full overflow-x-auto\">\n            <div ref={calendarRef} className=\"min-w-full\"></div>\n        </div>\n    );\n};\n\nexport default ScheduleTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}