{"ast":null,"code":"// utils.js\nexport const stringToColor = str => {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  const hue = hash % 360;\n  return `hsla(${hue}, 70%, 80%, 0.95)`; // Lighter shade with 60% opacity\n};\nexport const getQuarterCode = quarter => {\n  switch (quarter) {\n    case \"Winter\":\n      return 10;\n    case \"Spring\":\n      return 20;\n    case \"Fall\":\n      return 30;\n    case \"Summer\":\n      return 40;\n    default:\n      return 0;\n  }\n};\nexport const sortSchedules = (schedules, sortValue) => {\n  if (schedules.length <= 0) return;\n  schedules.sort((a, b) => {\n    if (sortValue === \"score\") {\n      return b.score - a.score;\n    } else if (sortValue === \"end\") {\n      return b.weights.end - a.weights.end;\n    } else if (sortValue === \"gap\") {\n      return b.weights.gap - a.weights.gap;\n    } else if (sortValue === \"gpa\") {\n      return b.weights.gpa - a.weights.gpa;\n    } else if (sortValue === \"start\") {\n      return b.weights.start - a.weights.start;\n    }\n    return 0;\n  });\n};\nexport const clearSchedule = () => {\n  const table = document.getElementById(\"calendar-table\");\n  if (!table) {\n    console.error(\"No element with ID 'calendar-table' found.\");\n    return;\n  }\n  const cells = table.getElementsByTagName(\"td\");\n  for (let cell of cells) {\n    if (cell.id !== \"cornerCell\" && !cell.classList.contains(\"time-cell\")) {\n      cell.innerHTML = \"\";\n      cell.style.backgroundColor = \"\";\n      cell.classList.remove(\"scheduled-course\");\n    }\n  }\n};\nexport const addCoursesToCalendar = (schedule, currentSchedule) => {\n  console.log(\"Adding courses to calendar:\", schedule, currentSchedule);\n  const courses = schedule.courses;\n  const cornerCell = document.getElementById(\"cornerCell\");\n  if (cornerCell) {\n    cornerCell.textContent = `Schedule ${currentSchedule}`;\n  }\n  courses.forEach(course => {\n    console.log(\"Processing course:\", course);\n    const days = course.days ? course.days.split(\"\") : [];\n    const startTime = parseInt(course.start_time);\n    const endTime = parseInt(course.end_time);\n    days.forEach(day => {\n      let startHour = Math.floor(startTime / 100);\n      let endHour = Math.ceil(endTime / 100);\n      for (let i = startHour; i < endHour; i++) {\n        const hour = i < 10 ? `0${i}00` : `${i}00`;\n        const cellId = `${day}-${hour}`;\n        const cell = document.getElementById(cellId);\n        if (cell) {\n          console.log(`Populating cell ${cellId}`);\n          const bgColor = stringToColor(course.crn);\n          cell.style.backgroundColor = bgColor;\n          cell.innerHTML = `<div class=\"text-xs p-1\">\n                        <b>${course.subject}</b><br>\n                        ${course.instructor}<br>\n                        ${course.crn}<br>\n                        ${course.room}\n                    </div>`;\n          cell.classList.add(\"scheduled-course\");\n        } // else {\n        //     console.log(`Cell ${cellId} not found`);\n        // }\n      }\n    });\n    if (course.lab_days) {\n      const labDays = course.lab_days ? course.lab_days.split(\"\") : [];\n      const labStart = parseInt(course.lab_start_time);\n      const labEnd = parseInt(course.lab_end_time);\n      labDays.forEach(labDay => {\n        let labStartHour = Math.floor(labStart / 100);\n        let labEndHour = Math.ceil(labEnd / 100);\n        for (let i = labStartHour; i < labEndHour; i++) {\n          if (i < 10) {\n            i = `0${i}`;\n          }\n          const cellId = `${labDay}-${i}00`;\n          const cell = document.getElementById(cellId);\n          if (cell) {\n            const bgColor = stringToColor(course.crn);\n            cell.style.backgroundColor = bgColor;\n            cell.innerHTML = `<b>${course.subject} LAB</b><br>${course.instructor}<br>${course.crn}<br>${course.lab_room}`;\n            cell.classList.add(\"scheduled-course\");\n          }\n        }\n      });\n    }\n  });\n};","map":{"version":3,"names":["stringToColor","str","hash","i","length","charCodeAt","hue","getQuarterCode","quarter","sortSchedules","schedules","sortValue","sort","a","b","score","weights","end","gap","gpa","start","clearSchedule","table","document","getElementById","console","error","cells","getElementsByTagName","cell","id","classList","contains","innerHTML","style","backgroundColor","remove","addCoursesToCalendar","schedule","currentSchedule","log","courses","cornerCell","textContent","forEach","course","days","split","startTime","parseInt","start_time","endTime","end_time","day","startHour","Math","floor","endHour","ceil","hour","cellId","bgColor","crn","subject","instructor","room","add","lab_days","labDays","labStart","lab_start_time","labEnd","lab_end_time","labDay","labStartHour","labEndHour","lab_room"],"sources":["/home/konnorkooi/code/schedule-optimizer/schedule-opt/frontend/src/utils.js"],"sourcesContent":["// utils.js\nexport const stringToColor = (str) => {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    const hue = hash % 360;\n    return `hsla(${hue}, 70%, 80%, 0.95)`; // Lighter shade with 60% opacity\n};\n\nexport const getQuarterCode = (quarter) => {\n    switch (quarter) {\n        case \"Winter\":\n            return 10;\n        case \"Spring\":\n            return 20;\n        case \"Fall\":\n            return 30;\n        case \"Summer\":\n            return 40;\n        default:\n            return 0;\n    }\n};\n\nexport const sortSchedules = (schedules, sortValue) => {\n    if (schedules.length <= 0) return;\n\n    schedules.sort((a, b) => {\n        if (sortValue === \"score\") {\n            return b.score - a.score;\n        } else if (sortValue === \"end\") {\n            return b.weights.end - a.weights.end;\n        } else if (sortValue === \"gap\") {\n            return b.weights.gap - a.weights.gap;\n        } else if (sortValue === \"gpa\") {\n            return b.weights.gpa - a.weights.gpa;\n        } else if (sortValue === \"start\") {\n            return b.weights.start - a.weights.start;\n        }\n        return 0;\n    });\n};\n\nexport const clearSchedule = () => {\n    const table = document.getElementById(\"calendar-table\");\n    if (!table) {\n        console.error(\"No element with ID 'calendar-table' found.\");\n        return;\n    }\n    const cells = table.getElementsByTagName(\"td\");\n    for (let cell of cells) {\n        if (cell.id !== \"cornerCell\" && !cell.classList.contains(\"time-cell\")) {\n            cell.innerHTML = \"\";\n            cell.style.backgroundColor = \"\";\n            cell.classList.remove(\"scheduled-course\");\n        }\n    }\n};\n\nexport const addCoursesToCalendar = (schedule, currentSchedule) => {\n    console.log(\"Adding courses to calendar:\", schedule, currentSchedule);\n    const courses = schedule.courses;\n    const cornerCell = document.getElementById(\"cornerCell\");\n    if (cornerCell) {\n        cornerCell.textContent = `Schedule ${currentSchedule}`;\n    }\n\n    courses.forEach((course) => {\n        console.log(\"Processing course:\", course);\n        const days = course.days ? course.days.split(\"\") : [];\n        const startTime = parseInt(course.start_time);\n        const endTime = parseInt(course.end_time);\n\n        days.forEach((day) => {\n            let startHour = Math.floor(startTime / 100);\n            let endHour = Math.ceil(endTime / 100);\n            for (let i = startHour; i < endHour; i++) {\n                const hour = i < 10 ? `0${i}00` : `${i}00`;\n                const cellId = `${day}-${hour}`;\n                const cell = document.getElementById(cellId);\n                if (cell) {\n                    console.log(`Populating cell ${cellId}`);\n                    const bgColor = stringToColor(course.crn);\n                    cell.style.backgroundColor = bgColor;\n                    cell.innerHTML = `<div class=\"text-xs p-1\">\n                        <b>${course.subject}</b><br>\n                        ${course.instructor}<br>\n                        ${course.crn}<br>\n                        ${course.room}\n                    </div>`;\n                    cell.classList.add(\"scheduled-course\");\n                } // else {\n                //     console.log(`Cell ${cellId} not found`);\n                // }\n            }\n        });\n\n        if (course.lab_days) {\n            const labDays = course.lab_days ? course.lab_days.split(\"\") : [];\n            const labStart = parseInt(course.lab_start_time);\n            const labEnd = parseInt(course.lab_end_time);\n            labDays.forEach((labDay) => {\n                let labStartHour = Math.floor(labStart / 100);\n                let labEndHour = Math.ceil(labEnd / 100);\n                for (let i = labStartHour; i < labEndHour; i++) {\n                    if (i < 10) {\n                        i = `0${i}`;\n                    }\n                    const cellId = `${labDay}-${i}00`;\n                    const cell = document.getElementById(cellId);\n\n                    if (cell) {\n                        const bgColor = stringToColor(course.crn);\n                        cell.style.backgroundColor = bgColor;\n                        cell.innerHTML = `<b>${course.subject} LAB</b><br>${course.instructor}<br>${course.crn}<br>${course.lab_room}`;\n                        cell.classList.add(\"scheduled-course\");\n                    }\n                }\n            });\n        }\n    });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}