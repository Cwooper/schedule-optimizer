{"ast":null,"code":"var _jsxFileName = \"/home/konnorkooi/code/schedule-optimizer/schedule-opt/frontend/src/components/ScheduleTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ScheduleTable = ({\n  schedule,\n  currentSchedule,\n  totalSchedules\n}) => {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  const hours = [\"08:00\", \"09:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\"];\n  const fullDaysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n  useEffect(() => {\n    if (schedule && schedule.courses) {\n      updateScheduleDisplay(schedule);\n    }\n  }, [schedule, currentSchedule]);\n  const updateScheduleDisplay = schedule => {\n    // ... (keep the existing updateScheduleDisplay logic)\n  };\n  const cellStyle = {\n    width: \"18%\",\n    // Adjust this value as needed\n    minWidth: \"120px\",\n    // Ensures a minimum width for readability\n    maxWidth: \"200px\",\n    // Prevents cells from becoming too wide\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\"\n  };\n  const timeCellStyle = {\n    width: \"10%\",\n    // Adjust for the time column\n    minWidth: \"80px\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full overflow-x-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"w-full border-collapse table-fixed\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: timeCellStyle,\n            className: \"border border-gray-300 p-2 text-center font-bold\",\n            children: [\"Schedule \", currentSchedule + 1, \" of \", totalSchedules]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), fullDaysOfWeek.map(day => /*#__PURE__*/_jsxDEV(\"th\", {\n            style: cellStyle,\n            className: \"border border-gray-300 p-2 text-center font-bold\",\n            children: day\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableData.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: timeCellStyle,\n            className: \"border border-gray-300 p-2 text-center font-bold\",\n            children: row.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), fullDaysOfWeek.map(day => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              ...cellStyle,\n              backgroundColor: row[day].color\n            },\n            className: \"border border-gray-300 p-2 text-center\",\n            children: row[day].content && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-bold truncate\",\n                children: row[day].content.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs truncate\",\n                children: row[day].content.details\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true)\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(ScheduleTable, \"qcVQMfdRY2vxgSp5dutEfuJRk7k=\");\n_c = ScheduleTable;\nexport default ScheduleTable;\nvar _c;\n$RefreshReg$(_c, \"ScheduleTable\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ScheduleTable","schedule","currentSchedule","totalSchedules","_s","tableData","setTableData","hours","fullDaysOfWeek","courses","updateScheduleDisplay","cellStyle","width","minWidth","maxWidth","overflow","textOverflow","whiteSpace","timeCellStyle","className","children","style","fileName","_jsxFileName","lineNumber","columnNumber","map","day","row","index","time","backgroundColor","color","content","title","details","_c","$RefreshReg$"],"sources":["/home/konnorkooi/code/schedule-optimizer/schedule-opt/frontend/src/components/ScheduleTable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst ScheduleTable = ({ schedule, currentSchedule, totalSchedules }) => {\n    const [tableData, setTableData] = useState([]);\n    const hours = [\n        \"08:00\",\n        \"09:00\",\n        \"10:00\",\n        \"11:00\",\n        \"12:00\",\n        \"13:00\",\n        \"14:00\",\n        \"15:00\",\n        \"16:00\",\n        \"17:00\",\n    ];\n    const fullDaysOfWeek = [\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\",\n        \"Thursday\",\n        \"Friday\",\n    ];\n\n    useEffect(() => {\n        if (schedule && schedule.courses) {\n            updateScheduleDisplay(schedule);\n        }\n    }, [schedule, currentSchedule]);\n\n    const updateScheduleDisplay = (schedule) => {\n        // ... (keep the existing updateScheduleDisplay logic)\n    };\n\n    const cellStyle = {\n        width: \"18%\", // Adjust this value as needed\n        minWidth: \"120px\", // Ensures a minimum width for readability\n        maxWidth: \"200px\", // Prevents cells from becoming too wide\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n    };\n\n    const timeCellStyle = {\n        width: \"10%\", // Adjust for the time column\n        minWidth: \"80px\",\n    };\n\n    return (\n        <div className=\"w-full overflow-x-auto\">\n            <table className=\"w-full border-collapse table-fixed\">\n                <thead>\n                    <tr className=\"bg-gray-200\">\n                        <th\n                            style={timeCellStyle}\n                            className=\"border border-gray-300 p-2 text-center font-bold\">\n                            Schedule {currentSchedule + 1} of {totalSchedules}\n                        </th>\n                        {fullDaysOfWeek.map((day) => (\n                            <th\n                                key={day}\n                                style={cellStyle}\n                                className=\"border border-gray-300 p-2 text-center font-bold\">\n                                {day}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {tableData.map((row, index) => (\n                        <tr key={index}>\n                            <td\n                                style={timeCellStyle}\n                                className=\"border border-gray-300 p-2 text-center font-bold\">\n                                {row.time}\n                            </td>\n                            {fullDaysOfWeek.map((day) => (\n                                <td\n                                    key={day}\n                                    style={{\n                                        ...cellStyle,\n                                        backgroundColor: row[day].color,\n                                    }}\n                                    className=\"border border-gray-300 p-2 text-center\">\n                                    {row[day].content && (\n                                        <>\n                                            <div className=\"font-bold truncate\">\n                                                {row[day].content.title}\n                                            </div>\n                                            <div className=\"text-xs truncate\">\n                                                {row[day].content.details}\n                                            </div>\n                                        </>\n                                    )}\n                                </td>\n                            ))}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default ScheduleTable;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,eAAe;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMa,KAAK,GAAG,CACV,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,CACV;EACD,MAAMC,cAAc,GAAG,CACnB,QAAQ,EACR,SAAS,EACT,WAAW,EACX,UAAU,EACV,QAAQ,CACX;EAEDb,SAAS,CAAC,MAAM;IACZ,IAAIM,QAAQ,IAAIA,QAAQ,CAACQ,OAAO,EAAE;MAC9BC,qBAAqB,CAACT,QAAQ,CAAC;IACnC;EACJ,CAAC,EAAE,CAACA,QAAQ,EAAEC,eAAe,CAAC,CAAC;EAE/B,MAAMQ,qBAAqB,GAAIT,QAAQ,IAAK;IACxC;EAAA,CACH;EAED,MAAMU,SAAS,GAAG;IACdC,KAAK,EAAE,KAAK;IAAE;IACdC,QAAQ,EAAE,OAAO;IAAE;IACnBC,QAAQ,EAAE,OAAO;IAAE;IACnBC,QAAQ,EAAE,QAAQ;IAClBC,YAAY,EAAE,UAAU;IACxBC,UAAU,EAAE;EAChB,CAAC;EAED,MAAMC,aAAa,GAAG;IAClBN,KAAK,EAAE,KAAK;IAAE;IACdC,QAAQ,EAAE;EACd,CAAC;EAED,oBACIhB,OAAA;IAAKsB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,eACnCvB,OAAA;MAAOsB,SAAS,EAAC,oCAAoC;MAAAC,QAAA,gBACjDvB,OAAA;QAAAuB,QAAA,eACIvB,OAAA;UAAIsB,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACvBvB,OAAA;YACIwB,KAAK,EAAEH,aAAc;YACrBC,SAAS,EAAC,kDAAkD;YAAAC,QAAA,GAAC,WACpD,EAAClB,eAAe,GAAG,CAAC,EAAC,MAAI,EAACC,cAAc;UAAA;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC,EACJjB,cAAc,CAACkB,GAAG,CAAEC,GAAG,iBACpB9B,OAAA;YAEIwB,KAAK,EAAEV,SAAU;YACjBQ,SAAS,EAAC,kDAAkD;YAAAC,QAAA,EAC3DO;UAAG,GAHCA,GAAG;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIR,CACP,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACR5B,OAAA;QAAAuB,QAAA,EACKf,SAAS,CAACqB,GAAG,CAAC,CAACE,GAAG,EAAEC,KAAK,kBACtBhC,OAAA;UAAAuB,QAAA,gBACIvB,OAAA;YACIwB,KAAK,EAAEH,aAAc;YACrBC,SAAS,EAAC,kDAAkD;YAAAC,QAAA,EAC3DQ,GAAG,CAACE;UAAI;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,EACJjB,cAAc,CAACkB,GAAG,CAAEC,GAAG,iBACpB9B,OAAA;YAEIwB,KAAK,EAAE;cACH,GAAGV,SAAS;cACZoB,eAAe,EAAEH,GAAG,CAACD,GAAG,CAAC,CAACK;YAC9B,CAAE;YACFb,SAAS,EAAC,wCAAwC;YAAAC,QAAA,EACjDQ,GAAG,CAACD,GAAG,CAAC,CAACM,OAAO,iBACbpC,OAAA,CAAAE,SAAA;cAAAqB,QAAA,gBACIvB,OAAA;gBAAKsB,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAC9BQ,GAAG,CAACD,GAAG,CAAC,CAACM,OAAO,CAACC;cAAK;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtB,CAAC,eACN5B,OAAA;gBAAKsB,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,EAC5BQ,GAAG,CAACD,GAAG,CAAC,CAACM,OAAO,CAACE;cAAO;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxB,CAAC;YAAA,eACR;UACL,GAfIE,GAAG;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAgBR,CACP,CAAC;QAAA,GAzBGI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA0BV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAACrB,EAAA,CApGIJ,aAAa;AAAAoC,EAAA,GAAbpC,aAAa;AAsGnB,eAAeA,aAAa;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}