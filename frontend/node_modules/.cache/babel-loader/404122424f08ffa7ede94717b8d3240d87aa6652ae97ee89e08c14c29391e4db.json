{"ast":null,"code":"var _jsxFileName = \"/home/konnorkooi/code/Side-projects/schedule-opt/frontend/src/components/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport { DayPilot, DayPilotScheduler } from \"@daypilot/daypilot-lite-react\";\nimport \"./CalendarStyles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = ({\n  schedules\n}) => {\n  _s();\n  const schedulerRef = useRef();\n  useEffect(() => {\n    if (!schedulerRef.current) return;\n    const dp = schedulerRef.current.control;\n\n    // Update the scheduler when schedules change\n    if (schedules && schedules.length > 0) {\n      const events = schedules.flatMap((schedule, index) => (schedule.courses || []).map(course => ({\n        id: course.crn,\n        text: `${course.subject} (${course.instructor})`,\n        start: `2023-10-02T${course.start_time.substring(0, 2)}:${course.start_time.substring(2, 4)}`,\n        end: `2023-10-02T${course.end_time.substring(0, 2)}:${course.end_time.substring(2, 4)}`,\n        resource: course.subject,\n        // Assuming subject as the resource\n        backColor: \"#6aa84f\",\n        scheduleIndex: index\n      })));\n      dp.events.list = events;\n      dp.update();\n    } else {\n      dp.clearSelection();\n      dp.events.list = [];\n      dp.update();\n    }\n  }, [schedules]);\n  const schedulerConfig = {\n    viewType: \"Resources\",\n    startDate: \"2023-10-02\",\n    // Just a reference date\n    days: 5,\n    businessBeginsHour: 8,\n    businessEndsHour: 17,\n    showNonBusiness: false,\n    cellDuration: 60,\n    headerDateFormat: \"dddd\",\n    timeHeaders: [{\n      groupBy: \"Day\"\n    }, {\n      groupBy: \"Hour\",\n      format: \"h tt\"\n    }],\n    resources: [{\n      name: \"Monday\",\n      id: \"Monday\"\n    }, {\n      name: \"Tuesday\",\n      id: \"Tuesday\"\n    }, {\n      name: \"Wednesday\",\n      id: \"Wednesday\"\n    }, {\n      name: \"Thursday\",\n      id: \"Thursday\"\n    }, {\n      name: \"Friday\",\n      id: \"Friday\"\n    }],\n    durationBarVisible: false,\n    eventDeleteHandling: \"Update\",\n    onEventDelete: async args => {\n      const dp = schedulerRef.current.control;\n      dp.events.remove(args.e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full\",\n    children: /*#__PURE__*/_jsxDEV(DayPilotScheduler, {\n      ...schedulerConfig,\n      ref: schedulerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(Calendar, \"Z/BzoMNJmk726iP5xqvcB+tBmXI=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useRef","useEffect","DayPilot","DayPilotScheduler","jsxDEV","_jsxDEV","Calendar","schedules","_s","schedulerRef","current","dp","control","length","events","flatMap","schedule","index","courses","map","course","id","crn","text","subject","instructor","start","start_time","substring","end","end_time","resource","backColor","scheduleIndex","list","update","clearSelection","schedulerConfig","viewType","startDate","days","businessBeginsHour","businessEndsHour","showNonBusiness","cellDuration","headerDateFormat","timeHeaders","groupBy","format","resources","name","durationBarVisible","eventDeleteHandling","onEventDelete","args","remove","e","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/konnorkooi/code/Side-projects/schedule-opt/frontend/src/components/Calendar.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { DayPilot, DayPilotScheduler } from \"@daypilot/daypilot-lite-react\";\nimport \"./CalendarStyles.css\";\n\nconst Calendar = ({ schedules }) => {\n    const schedulerRef = useRef();\n\n    useEffect(() => {\n        if (!schedulerRef.current) return;\n\n        const dp = schedulerRef.current.control;\n\n        // Update the scheduler when schedules change\n        if (schedules && schedules.length > 0) {\n            const events = schedules.flatMap((schedule, index) =>\n                (schedule.courses || []).map((course) => ({\n                    id: course.crn,\n                    text: `${course.subject} (${course.instructor})`,\n                    start: `2023-10-02T${course.start_time.substring(\n                        0,\n                        2\n                    )}:${course.start_time.substring(2, 4)}`,\n                    end: `2023-10-02T${course.end_time.substring(\n                        0,\n                        2\n                    )}:${course.end_time.substring(2, 4)}`,\n                    resource: course.subject, // Assuming subject as the resource\n                    backColor: \"#6aa84f\",\n                    scheduleIndex: index,\n                }))\n            );\n\n            dp.events.list = events;\n            dp.update();\n        } else {\n            dp.clearSelection();\n            dp.events.list = [];\n            dp.update();\n        }\n    }, [schedules]);\n\n    const schedulerConfig = {\n        viewType: \"Resources\",\n        startDate: \"2023-10-02\", // Just a reference date\n        days: 5,\n        businessBeginsHour: 8,\n        businessEndsHour: 17,\n        showNonBusiness: false,\n        cellDuration: 60,\n        headerDateFormat: \"dddd\",\n        timeHeaders: [{ groupBy: \"Day\" }, { groupBy: \"Hour\", format: \"h tt\" }],\n        resources: [\n            { name: \"Monday\", id: \"Monday\" },\n            { name: \"Tuesday\", id: \"Tuesday\" },\n            { name: \"Wednesday\", id: \"Wednesday\" },\n            { name: \"Thursday\", id: \"Thursday\" },\n            { name: \"Friday\", id: \"Friday\" },\n        ],\n        durationBarVisible: false,\n        eventDeleteHandling: \"Update\",\n        onEventDelete: async (args) => {\n            const dp = schedulerRef.current.control;\n            dp.events.remove(args.e);\n        },\n    };\n\n    return (\n        <div className=\"w-full\">\n            <DayPilotScheduler {...schedulerConfig} ref={schedulerRef} />\n        </div>\n    );\n};\n\nexport default Calendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}