{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport { stringToColor, getQuarterCode } from \"./utils\";\nimport axios from \"axios\";\nexport const useCourses = () => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const [forceList, setForceList] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleAddCourse = (courseName, section) => {\n    if (courses.some(course => course.name === `${courseName} ${section}`)) {\n      return false;\n    }\n    const newCourse = {\n      name: `${courseName} ${section}`,\n      forced: false\n    };\n    setCourses([...courses, newCourse]);\n    return true;\n  };\n  const handleRemoveCourse = courseName => {\n    setCourses(courses.filter(course => course.name !== courseName));\n    setForceList(forceList.filter(course => course !== courseName));\n  };\n  const handleToggleForce = courseName => {\n    setCourses(courses.map(course => course.name === courseName ? {\n      ...course,\n      forced: !course.forced\n    } : course));\n    if (forceList.includes(courseName)) {\n      setForceList(forceList.filter(course => course !== courseName));\n    } else {\n      setForceList([...forceList, courseName]);\n    }\n  };\n  return {\n    courses,\n    forceList,\n    errorMessage,\n    setErrorMessage,\n    handleAddCourse,\n    handleRemoveCourse,\n    handleToggleForce\n  };\n};\n_s(useCourses, \"w58zCl4CaOApMUI4mqzQTWEaxnc=\");\nexport const useSchedules = (setAllSchedules, setCurrentSchedule, displayScheduleFn, setErrorMessage, sortSchedules) => {\n  _s2();\n  const generateJSON = (courses, forceList, min, max, term, quarter) => {\n    if (courses.length < min) {\n      setErrorMessage(\"Cannot have less courses than minimum courses in a schedule.\");\n      return;\n    }\n    if (forceList.length > max) {\n      setErrorMessage(\"Cannot have more forced courses than maximum courses in a schedule.\");\n      return;\n    }\n    const quarterCode = getQuarterCode(quarter);\n    const scheduleinfo = {\n      courses: courses.map(course => course.name),\n      force: forceList,\n      min: min,\n      max: max,\n      term: `${term}${quarterCode}`\n    };\n    axios.post(\"/api/schedule-optimizer\", scheduleinfo).then(response => {\n      const data = response.data;\n      console.log(data);\n      if (data.errors && data.errors.length > 0) {\n        setErrorMessage(data.errors.join(\"<br>\"));\n        if (data.warnings && data.warnings.length > 0) {\n          setErrorMessage(prev => prev + \"<br>\" + data.warnings.join(\"<br>\"));\n        }\n      } else {\n        if (data.warnings && data.warnings.length > 0) {\n          setErrorMessage(data.warnings.join(\"<br>\"));\n        }\n        setAllSchedules(data.schedules);\n        sortSchedules(data.schedules);\n        setCurrentSchedule(0);\n        displayScheduleFn(data.schedules[0]);\n      }\n    }).catch(error => {\n      console.error(\"Error:\", error);\n      setErrorMessage(\"An error occurred while fetching schedules.\");\n    });\n  };\n  const addCoursesToCalendar = useCallback((schedule, currentSchedule) => {\n    const courses = schedule.courses;\n    const cornerCell = document.getElementById(\"cornerCell\");\n    if (cornerCell) {\n      cornerCell.textContent = `Schedule ${currentSchedule + 1}`;\n    }\n    courses.forEach(course => {\n      const days = course.days.split(\"\");\n      const startTime = parseInt(course.start_time);\n      const endTime = parseInt(course.end_time);\n      days.forEach(day => {\n        let startHour = Math.floor(startTime / 100);\n        let endHour = Math.ceil(endTime / 100);\n        for (let i = startHour; i < endHour; i++) {\n          if (i < 10) {\n            i = `0${i}`;\n          }\n          const cellId = `${day}-${i}00`;\n          const cell = document.getElementById(cellId);\n          if (cell) {\n            const bgColor = stringToColor(course.crn);\n            cell.style.backgroundColor = bgColor;\n            cell.innerHTML = `<b>${course.subject}</b><br>${course.instructor}<br>${course.crn}<br>${course.room}`;\n            cell.classList.add(\"scheduled-course\");\n          }\n        }\n      });\n      if (course.lab_days) {\n        const labDays = course.lab_days.split(\"\");\n        const labStart = parseInt(course.lab_start_time);\n        const labEnd = parseInt(course.lab_end_time);\n        labDays.forEach(labDay => {\n          let labStartHour = Math.floor(labStart / 100);\n          let labEndHour = Math.ceil(labEnd / 100);\n          for (let i = labStartHour; i < labEndHour; i++) {\n            if (i < 10) {\n              i = `0${i}`;\n            }\n            const cellId = `${labDay}-${i}00`;\n            const cell = document.getElementById(cellId);\n            if (cell) {\n              const bgColor = stringToColor(course.crn);\n              cell.style.backgroundColor = bgColor;\n              cell.innerHTML = `<b>${course.subject} LAB</b><br>${course.instructor}<br>${course.crn}<br>${course.lab_room}`;\n              cell.classList.add(\"scheduled-course\");\n            }\n          }\n        });\n      }\n    });\n  }, []);\n  const clearSchedule = useCallback(() => {\n    const table = document.getElementById(\"calendar\");\n    if (!table) {\n      console.error(\"No element with ID 'calendar' found.\");\n      return;\n    }\n    const elements = table.getElementsByTagName(\"*\");\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.id) {\n        element.textContent = \"\";\n        element.style = \"\";\n        element.classList.remove(\"scheduled-course\");\n      }\n    }\n  }, []);\n  const displaySchedule = useCallback(schedule => {\n    if (!schedule || !schedule.courses) {\n      console.error(\"Invalid schedule:\", schedule);\n      return;\n    }\n    clearSchedule();\n    addCoursesToCalendar(schedule, 0); // Display the first schedule by default\n  }, [clearSchedule, addCoursesToCalendar]);\n  return {\n    generateJSON,\n    addCoursesToCalendar,\n    clearSchedule,\n    displaySchedule\n  };\n};\n_s2(useSchedules, \"jV39mXfNUFaVN3knNBjKI7gXUkc=\");","map":{"version":3,"names":["useState","useCallback","stringToColor","getQuarterCode","axios","useCourses","_s","courses","setCourses","forceList","setForceList","errorMessage","setErrorMessage","handleAddCourse","courseName","section","some","course","name","newCourse","forced","handleRemoveCourse","filter","handleToggleForce","map","includes","useSchedules","setAllSchedules","setCurrentSchedule","displayScheduleFn","sortSchedules","_s2","generateJSON","min","max","term","quarter","length","quarterCode","scheduleinfo","force","post","then","response","data","console","log","errors","join","warnings","prev","schedules","catch","error","addCoursesToCalendar","schedule","currentSchedule","cornerCell","document","getElementById","textContent","forEach","days","split","startTime","parseInt","start_time","endTime","end_time","day","startHour","Math","floor","endHour","ceil","i","cellId","cell","bgColor","crn","style","backgroundColor","innerHTML","subject","instructor","room","classList","add","lab_days","labDays","labStart","lab_start_time","labEnd","lab_end_time","labDay","labStartHour","labEndHour","lab_room","clearSchedule","table","elements","getElementsByTagName","element","id","remove","displaySchedule"],"sources":["/home/konnorkooi/code/Side-projects/schedule-opt/frontend/src/useCourses.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\nimport { stringToColor, getQuarterCode } from \"./utils\";\nimport axios from \"axios\";\n\nexport const useCourses = () => {\n    const [courses, setCourses] = useState([]);\n    const [forceList, setForceList] = useState([]);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    const handleAddCourse = (courseName, section) => {\n        if (\n            courses.some((course) => course.name === `${courseName} ${section}`)\n        ) {\n            return false;\n        }\n\n        const newCourse = {\n            name: `${courseName} ${section}`,\n            forced: false,\n        };\n\n        setCourses([...courses, newCourse]);\n        return true;\n    };\n\n    const handleRemoveCourse = (courseName) => {\n        setCourses(courses.filter((course) => course.name !== courseName));\n        setForceList(forceList.filter((course) => course !== courseName));\n    };\n\n    const handleToggleForce = (courseName) => {\n        setCourses(\n            courses.map((course) =>\n                course.name === courseName\n                    ? { ...course, forced: !course.forced }\n                    : course\n            )\n        );\n        if (forceList.includes(courseName)) {\n            setForceList(forceList.filter((course) => course !== courseName));\n        } else {\n            setForceList([...forceList, courseName]);\n        }\n    };\n\n    return {\n        courses,\n        forceList,\n        errorMessage,\n        setErrorMessage,\n        handleAddCourse,\n        handleRemoveCourse,\n        handleToggleForce,\n    };\n};\n\nexport const useSchedules = (\n    setAllSchedules,\n    setCurrentSchedule,\n    displayScheduleFn,\n    setErrorMessage,\n    sortSchedules\n) => {\n    const generateJSON = (courses, forceList, min, max, term, quarter) => {\n        if (courses.length < min) {\n            setErrorMessage(\n                \"Cannot have less courses than minimum courses in a schedule.\"\n            );\n            return;\n        }\n\n        if (forceList.length > max) {\n            setErrorMessage(\n                \"Cannot have more forced courses than maximum courses in a schedule.\"\n            );\n            return;\n        }\n\n        const quarterCode = getQuarterCode(quarter);\n\n        const scheduleinfo = {\n            courses: courses.map((course) => course.name),\n            force: forceList,\n            min: min,\n            max: max,\n            term: `${term}${quarterCode}`,\n        };\n\n        axios\n            .post(\"/api/schedule-optimizer\", scheduleinfo)\n            .then((response) => {\n                const data = response.data;\n                console.log(data);\n                if (data.errors && data.errors.length > 0) {\n                    setErrorMessage(data.errors.join(\"<br>\"));\n                    if (data.warnings && data.warnings.length > 0) {\n                        setErrorMessage(\n                            (prev) => prev + \"<br>\" + data.warnings.join(\"<br>\")\n                        );\n                    }\n                } else {\n                    if (data.warnings && data.warnings.length > 0) {\n                        setErrorMessage(data.warnings.join(\"<br>\"));\n                    }\n                    setAllSchedules(data.schedules);\n                    sortSchedules(data.schedules);\n                    setCurrentSchedule(0);\n                    displayScheduleFn(data.schedules[0]);\n                }\n            })\n            .catch((error) => {\n                console.error(\"Error:\", error);\n                setErrorMessage(\"An error occurred while fetching schedules.\");\n            });\n    };\n\n    const addCoursesToCalendar = useCallback((schedule, currentSchedule) => {\n        const courses = schedule.courses;\n        const cornerCell = document.getElementById(\"cornerCell\");\n        if (cornerCell) {\n            cornerCell.textContent = `Schedule ${currentSchedule + 1}`;\n        }\n\n        courses.forEach((course) => {\n            const days = course.days.split(\"\");\n            const startTime = parseInt(course.start_time);\n            const endTime = parseInt(course.end_time);\n\n            days.forEach((day) => {\n                let startHour = Math.floor(startTime / 100);\n                let endHour = Math.ceil(endTime / 100);\n                for (let i = startHour; i < endHour; i++) {\n                    if (i < 10) {\n                        i = `0${i}`;\n                    }\n                    const cellId = `${day}-${i}00`;\n                    const cell = document.getElementById(cellId);\n                    if (cell) {\n                        const bgColor = stringToColor(course.crn);\n                        cell.style.backgroundColor = bgColor;\n                        cell.innerHTML = `<b>${course.subject}</b><br>${course.instructor}<br>${course.crn}<br>${course.room}`;\n                        cell.classList.add(\"scheduled-course\");\n                    }\n                }\n            });\n\n            if (course.lab_days) {\n                const labDays = course.lab_days.split(\"\");\n                const labStart = parseInt(course.lab_start_time);\n                const labEnd = parseInt(course.lab_end_time);\n                labDays.forEach((labDay) => {\n                    let labStartHour = Math.floor(labStart / 100);\n                    let labEndHour = Math.ceil(labEnd / 100);\n                    for (let i = labStartHour; i < labEndHour; i++) {\n                        if (i < 10) {\n                            i = `0${i}`;\n                        }\n                        const cellId = `${labDay}-${i}00`;\n                        const cell = document.getElementById(cellId);\n                        if (cell) {\n                            const bgColor = stringToColor(course.crn);\n                            cell.style.backgroundColor = bgColor;\n                            cell.innerHTML = `<b>${course.subject} LAB</b><br>${course.instructor}<br>${course.crn}<br>${course.lab_room}`;\n                            cell.classList.add(\"scheduled-course\");\n                        }\n                    }\n                });\n            }\n        });\n    }, []);\n\n    const clearSchedule = useCallback(() => {\n        const table = document.getElementById(\"calendar\");\n        if (!table) {\n            console.error(\"No element with ID 'calendar' found.\");\n            return;\n        }\n        const elements = table.getElementsByTagName(\"*\");\n\n        for (let i = 0; i < elements.length; i++) {\n            const element = elements[i];\n            if (element.id) {\n                element.textContent = \"\";\n                element.style = \"\";\n                element.classList.remove(\"scheduled-course\");\n            }\n        }\n    }, []);\n\n    const displaySchedule = useCallback(\n        (schedule) => {\n            if (!schedule || !schedule.courses) {\n                console.error(\"Invalid schedule:\", schedule);\n                return;\n            }\n\n            clearSchedule();\n            addCoursesToCalendar(schedule, 0); // Display the first schedule by default\n        },\n        [clearSchedule, addCoursesToCalendar]\n    );\n\n    return {\n        generateJSON,\n        addCoursesToCalendar,\n        clearSchedule,\n        displaySchedule,\n    };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}