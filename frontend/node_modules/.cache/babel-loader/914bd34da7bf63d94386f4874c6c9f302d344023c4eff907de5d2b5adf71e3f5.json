{"ast":null,"code":"var _jsxFileName = \"/home/konnorkooi/code/Side-projects/schedule-opt/frontend/src/components/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport { DayPilot, DayPilotCalendar } from \"@daypilot/daypilot-lite-react\";\nimport \"./CalendarStyles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = ({\n  schedules\n}) => {\n  _s();\n  const calendarRef = useRef();\n  useEffect(() => {\n    if (!schedules || schedules.length === 0) {\n      return;\n    }\n\n    // Helper function to format time\n    const formatTime = (date, time) => {\n      const hours = time.substring(0, 2);\n      const minutes = time.substring(2, 4);\n      return `${date}T${hours}:${minutes}:00`;\n    };\n    const events = schedules.flatMap((schedule, index) => (schedule.courses || []).map(course => ({\n      id: course.crn,\n      text: `${course.subject} (${course.instructor})`,\n      start: formatTime(\"2023-10-02\", course.start_time),\n      end: formatTime(\"2023-10-02\", course.end_time),\n      backColor: \"#6aa84f\",\n      scheduleIndex: index\n    })));\n    const startDate = \"2023-10-02\"; // Set the appropriate start date\n\n    calendarRef.current.control.update({\n      startDate,\n      events\n    });\n  }, [schedules]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full\",\n    children: /*#__PURE__*/_jsxDEV(DayPilotCalendar, {\n      viewType: \"Week\",\n      durationBarVisible: false,\n      ref: calendarRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Calendar, \"HuswXQNKgAj2xlMza6JPwM9t0kA=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useRef","useEffect","DayPilot","DayPilotCalendar","jsxDEV","_jsxDEV","Calendar","schedules","_s","calendarRef","length","formatTime","date","time","hours","substring","minutes","events","flatMap","schedule","index","courses","map","course","id","crn","text","subject","instructor","start","start_time","end","end_time","backColor","scheduleIndex","startDate","current","control","update","className","children","viewType","durationBarVisible","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/konnorkooi/code/Side-projects/schedule-opt/frontend/src/components/Calendar.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { DayPilot, DayPilotCalendar } from \"@daypilot/daypilot-lite-react\";\nimport \"./CalendarStyles.css\";\n\nconst Calendar = ({ schedules }) => {\n    const calendarRef = useRef();\n\n    useEffect(() => {\n        if (!schedules || schedules.length === 0) {\n            return;\n        }\n\n        // Helper function to format time\n        const formatTime = (date, time) => {\n            const hours = time.substring(0, 2);\n            const minutes = time.substring(2, 4);\n            return `${date}T${hours}:${minutes}:00`;\n        };\n\n        const events = schedules.flatMap((schedule, index) =>\n            (schedule.courses || []).map((course) => ({\n                id: course.crn,\n                text: `${course.subject} (${course.instructor})`,\n                start: formatTime(\"2023-10-02\", course.start_time),\n                end: formatTime(\"2023-10-02\", course.end_time),\n                backColor: \"#6aa84f\",\n                scheduleIndex: index,\n            }))\n        );\n\n        const startDate = \"2023-10-02\"; // Set the appropriate start date\n\n        calendarRef.current.control.update({ startDate, events });\n    }, [schedules]);\n\n    return (\n        <div className=\"w-full\">\n            <DayPilotCalendar\n                {...{\n                    viewType: \"Week\",\n                    durationBarVisible: false,\n                }}\n                ref={calendarRef}\n            />\n        </div>\n    );\n};\n\nexport default Calendar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,SAASC,QAAQ,EAAEC,gBAAgB,QAAQ,+BAA+B;AAC1E,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAMC,WAAW,GAAGT,MAAM,CAAC,CAAC;EAE5BC,SAAS,CAAC,MAAM;IACZ,IAAI,CAACM,SAAS,IAAIA,SAAS,CAACG,MAAM,KAAK,CAAC,EAAE;MACtC;IACJ;;IAEA;IACA,MAAMC,UAAU,GAAGA,CAACC,IAAI,EAAEC,IAAI,KAAK;MAC/B,MAAMC,KAAK,GAAGD,IAAI,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;MAClC,MAAMC,OAAO,GAAGH,IAAI,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;MACpC,OAAO,GAAGH,IAAI,IAAIE,KAAK,IAAIE,OAAO,KAAK;IAC3C,CAAC;IAED,MAAMC,MAAM,GAAGV,SAAS,CAACW,OAAO,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAC7C,CAACD,QAAQ,CAACE,OAAO,IAAI,EAAE,EAAEC,GAAG,CAAEC,MAAM,KAAM;MACtCC,EAAE,EAAED,MAAM,CAACE,GAAG;MACdC,IAAI,EAAE,GAAGH,MAAM,CAACI,OAAO,KAAKJ,MAAM,CAACK,UAAU,GAAG;MAChDC,KAAK,EAAElB,UAAU,CAAC,YAAY,EAAEY,MAAM,CAACO,UAAU,CAAC;MAClDC,GAAG,EAAEpB,UAAU,CAAC,YAAY,EAAEY,MAAM,CAACS,QAAQ,CAAC;MAC9CC,SAAS,EAAE,SAAS;MACpBC,aAAa,EAAEd;IACnB,CAAC,CAAC,CACN,CAAC;IAED,MAAMe,SAAS,GAAG,YAAY,CAAC,CAAC;;IAEhC1B,WAAW,CAAC2B,OAAO,CAACC,OAAO,CAACC,MAAM,CAAC;MAAEH,SAAS;MAAElB;IAAO,CAAC,CAAC;EAC7D,CAAC,EAAE,CAACV,SAAS,CAAC,CAAC;EAEf,oBACIF,OAAA;IAAKkC,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACnBnC,OAAA,CAACF,gBAAgB;MAETsC,QAAQ,EAAE,MAAM;MAChBC,kBAAkB,EAAE,KAAK;MAE7BC,GAAG,EAAElC;IAAY;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACvC,EAAA,CA1CIF,QAAQ;AAAA0C,EAAA,GAAR1C,QAAQ;AA4Cd,eAAeA,QAAQ;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}