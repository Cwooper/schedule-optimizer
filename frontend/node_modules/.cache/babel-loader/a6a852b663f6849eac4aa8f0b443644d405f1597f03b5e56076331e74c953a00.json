{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport { stringToColor, getQuarterCode } from \"./utils\";\nimport axios from \"axios\";\nexport const useCourses = () => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const [forceList, setForceList] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleAddCourse = (courseName, section) => {\n    if (courses.some(course => course.name === `${courseName} ${section}`)) {\n      return false;\n    }\n    const newCourse = {\n      name: `${courseName} ${section}`,\n      forced: false\n    };\n    setCourses([...courses, newCourse]);\n    return true;\n  };\n  const handleRemoveCourse = courseName => {\n    setCourses(courses.filter(course => course.name !== courseName));\n    setForceList(forceList.filter(course => course !== courseName));\n  };\n  const handleToggleForce = courseName => {\n    setCourses(courses.map(course => course.name === courseName ? {\n      ...course,\n      forced: !course.forced\n    } : course));\n    if (forceList.includes(courseName)) {\n      setForceList(forceList.filter(course => course !== courseName));\n    } else {\n      setForceList([...forceList, courseName]);\n    }\n  };\n  return {\n    courses,\n    forceList,\n    errorMessage,\n    setErrorMessage,\n    handleAddCourse,\n    handleRemoveCourse,\n    handleToggleForce\n  };\n};\n_s(useCourses, \"w58zCl4CaOApMUI4mqzQTWEaxnc=\");\nexport const useSchedules = () => {\n  _s2();\n  const [allSchedules, setAllSchedules] = useState([]);\n  const [currentSchedule, setCurrentSchedule] = useState(0);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [warnings, setWarnings] = useState([]); // Add this line\n\n  const generateJSON = async (courses, forceList, min, max, term, quarter) => {\n    if (courses.length < min) {\n      setErrorMessage(\"Cannot have less courses than minimum courses in a schedule.\");\n      return;\n    }\n    if (forceList.length > max) {\n      setErrorMessage(\"Cannot have more forced courses than maximum courses in a schedule.\");\n      return;\n    }\n    const quarterCode = getQuarterCode(quarter);\n    // Create the RawRequest structure\n    const rawRequest = {\n      Courses: courses.map(course => course.name),\n      Forced: forceList,\n      Term: `${term}${quarterCode}`,\n      Min: min,\n      Max: max\n    };\n    try {\n      const response = await axios.post(\"/schedule-optimizer\", rawRequest);\n      const data = response.data;\n      console.log(data);\n      if (data.Errors && data.Errors.length > 0) {\n        setErrorMessage(data.Errors.join(\"<br>\"));\n      } else {\n        setErrorMessage(\"\");\n      }\n      if (data.Warnings && data.Warnings.length > 0) {\n        setWarnings(data.Warnings); // Set warnings\n      } else {\n        setWarnings([]);\n      }\n      if (data.Schedules && data.Schedules.length > 0) {\n        setAllSchedules(data.Schedules);\n        setCurrentSchedule(0);\n      } else {\n        setAllSchedules([]);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setErrorMessage(\"An error occurred while fetching schedules.\");\n      setWarnings([]);\n    }\n  };\n  return {\n    allSchedules,\n    setAllSchedules,\n    currentSchedule,\n    setCurrentSchedule,\n    errorMessage,\n    setErrorMessage,\n    warnings,\n    // Add this line\n    setWarnings,\n    // Add this line\n    generateJSON\n  };\n};\n_s2(useSchedules, \"ylYUTQEbt1YFBHGEhG8sui5ERmk=\");","map":{"version":3,"names":["useState","useCallback","stringToColor","getQuarterCode","axios","useCourses","_s","courses","setCourses","forceList","setForceList","errorMessage","setErrorMessage","handleAddCourse","courseName","section","some","course","name","newCourse","forced","handleRemoveCourse","filter","handleToggleForce","map","includes","useSchedules","_s2","allSchedules","setAllSchedules","currentSchedule","setCurrentSchedule","warnings","setWarnings","generateJSON","min","max","term","quarter","length","quarterCode","rawRequest","Courses","Forced","Term","Min","Max","response","post","data","console","log","Errors","join","Warnings","Schedules","error"],"sources":["/home/konnorkooi/code/react_go_schedule/schedule-optimizer/frontend/src/useCourses.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\nimport { stringToColor, getQuarterCode } from \"./utils\";\nimport axios from \"axios\";\n\nexport const useCourses = () => {\n    const [courses, setCourses] = useState([]);\n    const [forceList, setForceList] = useState([]);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    const handleAddCourse = (courseName, section) => {\n        if (\n            courses.some((course) => course.name === `${courseName} ${section}`)\n        ) {\n            return false;\n        }\n        const newCourse = {\n            name: `${courseName} ${section}`,\n            forced: false,\n        };\n        setCourses([...courses, newCourse]);\n        return true;\n    };\n\n    const handleRemoveCourse = (courseName) => {\n        setCourses(courses.filter((course) => course.name !== courseName));\n        setForceList(forceList.filter((course) => course !== courseName));\n    };\n\n    const handleToggleForce = (courseName) => {\n        setCourses(\n            courses.map((course) =>\n                course.name === courseName\n                    ? { ...course, forced: !course.forced }\n                    : course\n            )\n        );\n        if (forceList.includes(courseName)) {\n            setForceList(forceList.filter((course) => course !== courseName));\n        } else {\n            setForceList([...forceList, courseName]);\n        }\n    };\n\n    return {\n        courses,\n        forceList,\n        errorMessage,\n        setErrorMessage,\n        handleAddCourse,\n        handleRemoveCourse,\n        handleToggleForce,\n    };\n};\n\nexport const useSchedules = () => {\n    const [allSchedules, setAllSchedules] = useState([]);\n    const [currentSchedule, setCurrentSchedule] = useState(0);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [warnings, setWarnings] = useState([]); // Add this line\n\n    const generateJSON = async (\n        courses,\n        forceList,\n        min,\n        max,\n        term,\n        quarter\n    ) => {\n        if (courses.length < min) {\n            setErrorMessage(\n                \"Cannot have less courses than minimum courses in a schedule.\"\n            );\n            return;\n        }\n        if (forceList.length > max) {\n            setErrorMessage(\n                \"Cannot have more forced courses than maximum courses in a schedule.\"\n            );\n            return;\n        }\n        const quarterCode = getQuarterCode(quarter);\n        // Create the RawRequest structure\n        const rawRequest = {\n            Courses: courses.map((course) => course.name),\n            Forced: forceList,\n            Term: `${term}${quarterCode}`,\n            Min: min,\n            Max: max,\n        };\n        try {\n            const response = await axios.post(\n                \"/schedule-optimizer\",\n                rawRequest\n            );\n            const data = response.data;\n            console.log(data);\n            if (data.Errors && data.Errors.length > 0) {\n                setErrorMessage(data.Errors.join(\"<br>\"));\n            } else {\n                setErrorMessage(\"\");\n            }\n\n            if (data.Warnings && data.Warnings.length > 0) {\n                setWarnings(data.Warnings); // Set warnings\n            } else {\n                setWarnings([]);\n            }\n\n            if (data.Schedules && data.Schedules.length > 0) {\n                setAllSchedules(data.Schedules);\n                setCurrentSchedule(0);\n            } else {\n                setAllSchedules([]);\n            }\n        } catch (error) {\n            console.error(\"Error:\", error);\n            setErrorMessage(\"An error occurred while fetching schedules.\");\n            setWarnings([]);\n        }\n    };\n\n    return {\n        allSchedules,\n        setAllSchedules,\n        currentSchedule,\n        setCurrentSchedule,\n        errorMessage,\n        setErrorMessage,\n        warnings, // Add this line\n        setWarnings, // Add this line\n        generateJSON,\n    };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}