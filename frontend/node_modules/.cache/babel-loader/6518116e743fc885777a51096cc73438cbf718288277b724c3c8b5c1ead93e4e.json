{"ast":null,"code":"// utils.js\n\nexport const stringToColor = str => {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  const c = (hash & 0x00ffffff).toString(16).toUpperCase().padStart(6, \"0\");\n  return `#${c}`;\n};\nexport const getQuarterCode = quarter => {\n  switch (quarter) {\n    case \"Winter\":\n      return 10;\n    case \"Spring\":\n      return 20;\n    case \"Fall\":\n      return 30;\n    case \"Summer\":\n      return 40;\n    default:\n      return 0;\n  }\n};\nexport const sortSchedules = (schedules, sortValue) => {\n  if (schedules.length <= 0) return;\n  schedules.sort((a, b) => {\n    if (sortValue === \"score\") {\n      return b.score - a.score;\n    } else if (sortValue === \"end\") {\n      return b.weights.end - a.weights.end;\n    } else if (sortValue === \"gap\") {\n      return b.weights.gap - a.weights.gap;\n    } else if (sortValue === \"gpa\") {\n      return b.weights.gpa - a.weights.gpa;\n    } else if (sortValue === \"start\") {\n      return b.weights.start - a.weights.start;\n    }\n    return 0;\n  });\n};\nexport const clearSchedule = () => {\n  const table = document.getElementById(\"calendar\");\n  if (!table) {\n    console.error(\"No element with ID 'calendar' found.\");\n    return;\n  }\n  const elements = table.getElementsByTagName(\"*\");\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n    if (element.id) {\n      element.textContent = \"\";\n      element.style = \"\";\n      element.classList.remove(\"scheduled-course\");\n    }\n  }\n};\nexport const addCoursesToCalendar = (schedule, currentSchedule) => {\n  console.log(\"Adding courses to calendar:\", schedule, currentSchedule);\n  const courses = schedule.courses;\n  const cornerCell = document.getElementById(\"cornerCell\");\n  if (cornerCell) {\n    cornerCell.textContent = `Schedule ${currentSchedule}`;\n  }\n  courses.forEach(course => {\n    console.log(\"Processing course:\", course);\n    const days = course.days ? course.days.split(\"\") : [];\n    const startTime = parseInt(course.start_time);\n    const endTime = parseInt(course.end_time);\n    days.forEach(day => {\n      let startHour = Math.floor(startTime / 100);\n      let endHour = Math.ceil(endTime / 100);\n      for (let i = startHour; i < endHour; i++) {\n        const hour = i < 10 ? `0${i}00` : `${i}00`;\n        const cellId = `${day}-${hour}`;\n        const cell = document.getElementById(cellId);\n        if (cell) {\n          console.log(`Populating cell ${cellId}`);\n          const bgColor = stringToColor(course.crn);\n          cell.style.backgroundColor = bgColor;\n          cell.innerHTML = `<div class=\"text-xs p-1\">\n                        <b>${course.subject}</b><br>\n                        ${course.instructor}<br>\n                        ${course.crn}<br>\n                        ${course.room}\n                    </div>`;\n          cell.classList.add(\"scheduled-course\");\n        } else {\n          console.log(`Cell ${cellId} not found`);\n        }\n      }\n    });\n    if (course.lab_days) {\n      const labDays = course.lab_days ? course.lab_days.split(\"\") : [];\n      const labStart = parseInt(course.lab_start_time);\n      const labEnd = parseInt(course.lab_end_time);\n      labDays.forEach(labDay => {\n        let labStartHour = Math.floor(labStart / 100);\n        let labEndHour = Math.ceil(labEnd / 100);\n        for (let i = labStartHour; i < labEndHour; i++) {\n          if (i < 10) {\n            i = `0${i}`;\n          }\n          const cellId = `${labDay}-${i}00`;\n          const cell = document.getElementById(cellId);\n          if (cell) {\n            const bgColor = stringToColor(course.crn);\n            cell.style.backgroundColor = bgColor;\n            cell.innerHTML = `<b>${course.subject} LAB</b><br>${course.instructor}<br>${course.crn}<br>${course.lab_room}`;\n            cell.classList.add(\"scheduled-course\");\n          }\n        }\n      });\n    }\n  });\n};","map":{"version":3,"names":["stringToColor","str","hash","i","length","charCodeAt","c","toString","toUpperCase","padStart","getQuarterCode","quarter","sortSchedules","schedules","sortValue","sort","a","b","score","weights","end","gap","gpa","start","clearSchedule","table","document","getElementById","console","error","elements","getElementsByTagName","element","id","textContent","style","classList","remove","addCoursesToCalendar","schedule","currentSchedule","log","courses","cornerCell","forEach","course","days","split","startTime","parseInt","start_time","endTime","end_time","day","startHour","Math","floor","endHour","ceil","hour","cellId","cell","bgColor","crn","backgroundColor","innerHTML","subject","instructor","room","add","lab_days","labDays","labStart","lab_start_time","labEnd","lab_end_time","labDay","labStartHour","labEndHour","lab_room"],"sources":["/home/konnorkooi/code/schedule-optimizer/schedule-opt/frontend/src/utils.js"],"sourcesContent":["// utils.js\n\nexport const stringToColor = (str) => {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    const c = (hash & 0x00ffffff).toString(16).toUpperCase().padStart(6, \"0\");\n    return `#${c}`;\n};\n\nexport const getQuarterCode = (quarter) => {\n    switch (quarter) {\n        case \"Winter\":\n            return 10;\n        case \"Spring\":\n            return 20;\n        case \"Fall\":\n            return 30;\n        case \"Summer\":\n            return 40;\n        default:\n            return 0;\n    }\n};\n\nexport const sortSchedules = (schedules, sortValue) => {\n    if (schedules.length <= 0) return;\n\n    schedules.sort((a, b) => {\n        if (sortValue === \"score\") {\n            return b.score - a.score;\n        } else if (sortValue === \"end\") {\n            return b.weights.end - a.weights.end;\n        } else if (sortValue === \"gap\") {\n            return b.weights.gap - a.weights.gap;\n        } else if (sortValue === \"gpa\") {\n            return b.weights.gpa - a.weights.gpa;\n        } else if (sortValue === \"start\") {\n            return b.weights.start - a.weights.start;\n        }\n        return 0;\n    });\n};\n\nexport const clearSchedule = () => {\n    const table = document.getElementById(\"calendar\");\n    if (!table) {\n        console.error(\"No element with ID 'calendar' found.\");\n        return;\n    }\n    const elements = table.getElementsByTagName(\"*\");\n\n    for (let i = 0; i < elements.length; i++) {\n        const element = elements[i];\n        if (element.id) {\n            element.textContent = \"\";\n            element.style = \"\";\n            element.classList.remove(\"scheduled-course\");\n        }\n    }\n};\n\nexport const addCoursesToCalendar = (schedule, currentSchedule) => {\n    console.log(\"Adding courses to calendar:\", schedule, currentSchedule);\n    const courses = schedule.courses;\n    const cornerCell = document.getElementById(\"cornerCell\");\n    if (cornerCell) {\n        cornerCell.textContent = `Schedule ${currentSchedule}`;\n    }\n\n    courses.forEach((course) => {\n        console.log(\"Processing course:\", course);\n        const days = course.days ? course.days.split(\"\") : [];\n        const startTime = parseInt(course.start_time);\n        const endTime = parseInt(course.end_time);\n\n        days.forEach((day) => {\n            let startHour = Math.floor(startTime / 100);\n            let endHour = Math.ceil(endTime / 100);\n            for (let i = startHour; i < endHour; i++) {\n                const hour = i < 10 ? `0${i}00` : `${i}00`;\n                const cellId = `${day}-${hour}`;\n                const cell = document.getElementById(cellId);\n                if (cell) {\n                    console.log(`Populating cell ${cellId}`);\n                    const bgColor = stringToColor(course.crn);\n                    cell.style.backgroundColor = bgColor;\n                    cell.innerHTML = `<div class=\"text-xs p-1\">\n                        <b>${course.subject}</b><br>\n                        ${course.instructor}<br>\n                        ${course.crn}<br>\n                        ${course.room}\n                    </div>`;\n                    cell.classList.add(\"scheduled-course\");\n                } else {\n                    console.log(`Cell ${cellId} not found`);\n                }\n            }\n        });\n\n        if (course.lab_days) {\n            const labDays = course.lab_days ? course.lab_days.split(\"\") : [];\n            const labStart = parseInt(course.lab_start_time);\n            const labEnd = parseInt(course.lab_end_time);\n            labDays.forEach((labDay) => {\n                let labStartHour = Math.floor(labStart / 100);\n                let labEndHour = Math.ceil(labEnd / 100);\n                for (let i = labStartHour; i < labEndHour; i++) {\n                    if (i < 10) {\n                        i = `0${i}`;\n                    }\n                    const cellId = `${labDay}-${i}00`;\n                    const cell = document.getElementById(cellId);\n\n                    if (cell) {\n                        const bgColor = stringToColor(course.crn);\n                        cell.style.backgroundColor = bgColor;\n                        cell.innerHTML = `<b>${course.subject} LAB</b><br>${course.instructor}<br>${course.crn}<br>${course.lab_room}`;\n                        cell.classList.add(\"scheduled-course\");\n                    }\n                }\n            });\n        }\n    });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}