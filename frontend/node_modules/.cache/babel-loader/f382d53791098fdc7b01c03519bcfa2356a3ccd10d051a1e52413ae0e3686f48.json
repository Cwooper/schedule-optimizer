{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport { stringToColor, getQuarterCode } from \"./utils\";\nimport axios from \"axios\";\nexport const useCourses = () => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const [forceList, setForceList] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleAddCourse = (courseName, section) => {\n    if (courses.some(course => course.name === `${courseName} ${section}`)) {\n      return false;\n    }\n    const newCourse = {\n      name: `${courseName} ${section}`,\n      forced: false\n    };\n    setCourses([...courses, newCourse]);\n    return true;\n  };\n  const handleRemoveCourse = courseName => {\n    setCourses(courses.filter(course => course.name !== courseName));\n    setForceList(forceList.filter(course => course !== courseName));\n  };\n  const handleToggleForce = courseName => {\n    setCourses(courses.map(course => course.name === courseName ? {\n      ...course,\n      forced: !course.forced\n    } : course));\n    if (forceList.includes(courseName)) {\n      setForceList(forceList.filter(course => course !== courseName));\n    } else {\n      setForceList([...forceList, courseName]);\n    }\n  };\n  return {\n    courses,\n    forceList,\n    errorMessage,\n    setErrorMessage,\n    handleAddCourse,\n    handleRemoveCourse,\n    handleToggleForce\n  };\n};\n_s(useCourses, \"w58zCl4CaOApMUI4mqzQTWEaxnc=\");\nexport const useSchedules = (setAllSchedules, setCurrentSchedule, displayScheduleFn, setErrorMessage, sortSchedules) => {\n  const generateJSON = async (courses, forceList, min, max, term, quarter) => {\n    if (courses.length < min) {\n      setErrorMessage(\"Cannot have less courses than minimum courses in a schedule.\");\n      return;\n    }\n    if (forceList.length > max) {\n      setErrorMessage(\"Cannot have more forced courses than maximum courses in a schedule.\");\n      return;\n    }\n    const quarterCode = getQuarterCode(quarter);\n\n    // Create the RawRequest structure\n    const rawRequest = {\n      Courses: courses.map(course => course.name),\n      Forced: forceList,\n      Term: `${term}${quarterCode}`,\n      Min: min,\n      Max: max\n    };\n    try {\n      const response = await axios.post(\"/schedule-optimizer\", rawRequest);\n      const data = response.data;\n      console.log(data);\n      if (data.errors && data.errors.length > 0) {\n        setErrorMessage(data.errors.join(\"<br>\"));\n        if (data.warnings && data.warnings.length > 0) {\n          setErrorMessage(prev => prev + \"<br>\" + data.warnings.join(\"<br>\"));\n        }\n      } else {\n        if (data.warnings && data.warnings.length > 0) {\n          setErrorMessage(data.warnings.join(\"<br>\"));\n        }\n        setAllSchedules(data.schedules);\n        sortSchedules(data.schedules);\n        setCurrentSchedule(0);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setErrorMessage(\"An error occurred while fetching schedules.\");\n    }\n  };\n  return {\n    generateJSON\n  };\n};","map":{"version":3,"names":["useState","useCallback","stringToColor","getQuarterCode","axios","useCourses","_s","courses","setCourses","forceList","setForceList","errorMessage","setErrorMessage","handleAddCourse","courseName","section","some","course","name","newCourse","forced","handleRemoveCourse","filter","handleToggleForce","map","includes","useSchedules","setAllSchedules","setCurrentSchedule","displayScheduleFn","sortSchedules","generateJSON","min","max","term","quarter","length","quarterCode","rawRequest","Courses","Forced","Term","Min","Max","response","post","data","console","log","errors","join","warnings","prev","schedules","error"],"sources":["/home/konnorkooi/code/react_go_schedule/schedule-optimizer/frontend/src/useCourses.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\nimport { stringToColor, getQuarterCode } from \"./utils\";\nimport axios from \"axios\";\n\nexport const useCourses = () => {\n    const [courses, setCourses] = useState([]);\n    const [forceList, setForceList] = useState([]);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    const handleAddCourse = (courseName, section) => {\n        if (\n            courses.some((course) => course.name === `${courseName} ${section}`)\n        ) {\n            return false;\n        }\n\n        const newCourse = {\n            name: `${courseName} ${section}`,\n            forced: false,\n        };\n\n        setCourses([...courses, newCourse]);\n        return true;\n    };\n\n    const handleRemoveCourse = (courseName) => {\n        setCourses(courses.filter((course) => course.name !== courseName));\n        setForceList(forceList.filter((course) => course !== courseName));\n    };\n\n    const handleToggleForce = (courseName) => {\n        setCourses(\n            courses.map((course) =>\n                course.name === courseName\n                    ? { ...course, forced: !course.forced }\n                    : course\n            )\n        );\n        if (forceList.includes(courseName)) {\n            setForceList(forceList.filter((course) => course !== courseName));\n        } else {\n            setForceList([...forceList, courseName]);\n        }\n    };\n\n    return {\n        courses,\n        forceList,\n        errorMessage,\n        setErrorMessage,\n        handleAddCourse,\n        handleRemoveCourse,\n        handleToggleForce,\n    };\n};\n\nexport const useSchedules = (\n    setAllSchedules,\n    setCurrentSchedule,\n    displayScheduleFn,\n    setErrorMessage,\n    sortSchedules\n) => {\n    const generateJSON = async (\n        courses,\n        forceList,\n        min,\n        max,\n        term,\n        quarter\n    ) => {\n        if (courses.length < min) {\n            setErrorMessage(\n                \"Cannot have less courses than minimum courses in a schedule.\"\n            );\n            return;\n        }\n\n        if (forceList.length > max) {\n            setErrorMessage(\n                \"Cannot have more forced courses than maximum courses in a schedule.\"\n            );\n            return;\n        }\n\n        const quarterCode = getQuarterCode(quarter);\n\n        // Create the RawRequest structure\n        const rawRequest = {\n            Courses: courses.map((course) => course.name),\n            Forced: forceList,\n            Term: `${term}${quarterCode}`,\n            Min: min,\n            Max: max,\n        };\n\n        try {\n            const response = await axios.post(\n                \"/schedule-optimizer\",\n                rawRequest\n            );\n            const data = response.data;\n            console.log(data);\n            if (data.errors && data.errors.length > 0) {\n                setErrorMessage(data.errors.join(\"<br>\"));\n                if (data.warnings && data.warnings.length > 0) {\n                    setErrorMessage(\n                        (prev) => prev + \"<br>\" + data.warnings.join(\"<br>\")\n                    );\n                }\n            } else {\n                if (data.warnings && data.warnings.length > 0) {\n                    setErrorMessage(data.warnings.join(\"<br>\"));\n                }\n                setAllSchedules(data.schedules);\n                sortSchedules(data.schedules);\n                setCurrentSchedule(0);\n            }\n        } catch (error) {\n            console.error(\"Error:\", error);\n            setErrorMessage(\"An error occurred while fetching schedules.\");\n        }\n    };\n\n    return {\n        generateJSON,\n    };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}