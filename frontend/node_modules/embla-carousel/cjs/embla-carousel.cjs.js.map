{"version":3,"file":"embla-carousel.cjs.js","sources":["../src/components/utils.ts","../src/components/Alignment.ts","../src/components/EventStore.ts","../src/components/Animations.ts","../src/components/Axis.ts","../src/components/Limit.ts","../src/components/Counter.ts","../src/components/DragHandler.ts","../src/components/DragTracker.ts","../src/components/NodeRects.ts","../src/components/PercentOfView.ts","../src/components/ResizeHandler.ts","../src/components/ScrollBody.ts","../src/components/ScrollBounds.ts","../src/components/ScrollContain.ts","../src/components/ScrollLimit.ts","../src/components/ScrollLooper.ts","../src/components/ScrollProgress.ts","../src/components/ScrollSnaps.ts","../src/components/SlideRegistry.ts","../src/components/ScrollTarget.ts","../src/components/ScrollTo.ts","../src/components/SlideFocus.ts","../src/components/Vector1d.ts","../src/components/Translate.ts","../src/components/SlideLooper.ts","../src/components/SlidesHandler.ts","../src/components/SlidesInView.ts","../src/components/SlideSizes.ts","../src/components/SlidesToScroll.ts","../src/components/Engine.ts","../src/components/EventHandler.ts","../src/components/Options.ts","../src/components/OptionsHandler.ts","../src/components/PluginsHandler.ts","../src/components/EmblaCarousel.ts"],"sourcesContent":["import { PointerEventType } from './DragTracker'\n\nexport type WindowType = Window & typeof globalThis\n\nexport function isNumber(subject: unknown): subject is number {\n  return typeof subject === 'number'\n}\n\nexport function isString(subject: unknown): subject is string {\n  return typeof subject === 'string'\n}\n\nexport function isBoolean(subject: unknown): subject is boolean {\n  return typeof subject === 'boolean'\n}\n\nexport function isObject(subject: unknown): subject is Record<string, unknown> {\n  return Object.prototype.toString.call(subject) === '[object Object]'\n}\n\nexport function mathAbs(n: number): number {\n  return Math.abs(n)\n}\n\nexport function mathSign(n: number): number {\n  return Math.sign(n)\n}\n\nexport function deltaAbs(valueB: number, valueA: number): number {\n  return mathAbs(valueB - valueA)\n}\n\nexport function factorAbs(valueB: number, valueA: number): number {\n  if (valueB === 0 || valueA === 0) return 0\n  if (mathAbs(valueB) <= mathAbs(valueA)) return 0\n  const diff = deltaAbs(mathAbs(valueB), mathAbs(valueA))\n  return mathAbs(diff / valueB)\n}\n\nexport function arrayKeys<Type>(array: Type[]): number[] {\n  return objectKeys(array).map(Number)\n}\n\nexport function arrayLast<Type>(array: Type[]): Type {\n  return array[arrayLastIndex(array)]\n}\n\nexport function arrayLastIndex<Type>(array: Type[]): number {\n  return Math.max(0, array.length - 1)\n}\n\nexport function arrayIsLastIndex<Type>(array: Type[], index: number): boolean {\n  return index === arrayLastIndex(array)\n}\n\nexport function arrayFromNumber(n: number, startAt: number = 0): number[] {\n  return Array.from(Array(n), (_, i) => startAt + i)\n}\n\nexport function objectKeys<Type extends object>(object: Type): string[] {\n  return Object.keys(object)\n}\n\nexport function objectsMergeDeep(\n  objectA: Record<string, unknown>,\n  objectB: Record<string, unknown>\n): Record<string, unknown> {\n  return [objectA, objectB].reduce((mergedObjects, currentObject) => {\n    objectKeys(currentObject).forEach((key) => {\n      const valueA = mergedObjects[key]\n      const valueB = currentObject[key]\n      const areObjects = isObject(valueA) && isObject(valueB)\n\n      mergedObjects[key] = areObjects\n        ? objectsMergeDeep(valueA, valueB)\n        : valueB\n    })\n    return mergedObjects\n  }, {})\n}\n\nexport function isMouseEvent(\n  evt: PointerEventType,\n  ownerWindow: WindowType\n): evt is MouseEvent {\n  return (\n    typeof ownerWindow.MouseEvent !== 'undefined' &&\n    evt instanceof ownerWindow.MouseEvent\n  )\n}\n","import { isString } from './utils'\n\nexport type AlignmentOptionType =\n  | 'start'\n  | 'center'\n  | 'end'\n  | ((viewSize: number, snapSize: number, index: number) => number)\n\nexport type AlignmentType = {\n  measure: (n: number, index: number) => number\n}\n\nexport function Alignment(\n  align: AlignmentOptionType,\n  viewSize: number\n): AlignmentType {\n  const predefined = { start, center, end }\n\n  function start(): number {\n    return 0\n  }\n\n  function center(n: number): number {\n    return end(n) / 2\n  }\n\n  function end(n: number): number {\n    return viewSize - n\n  }\n\n  function measure(n: number, index: number): number {\n    if (isString(align)) return predefined[align](n)\n    return align(viewSize, n, index)\n  }\n\n  const self: AlignmentType = {\n    measure\n  }\n  return self\n}\n","type EventNameType = keyof DocumentEventMap | keyof WindowEventMap\ntype EventHandlerType = (evt: any) => void\ntype EventOptionsType = boolean | AddEventListenerOptions | undefined\ntype EventRemoverType = () => void\n\nexport type EventStoreType = {\n  add: (\n    node: EventTarget,\n    type: EventNameType,\n    handler: EventHandlerType,\n    options?: EventOptionsType\n  ) => EventStoreType\n  clear: () => void\n}\n\nexport function EventStore(): EventStoreType {\n  let listeners: EventRemoverType[] = []\n\n  function add(\n    node: EventTarget,\n    type: EventNameType,\n    handler: EventHandlerType,\n    options: EventOptionsType = { passive: true }\n  ): EventStoreType {\n    let removeListener: EventRemoverType\n\n    if ('addEventListener' in node) {\n      node.addEventListener(type, handler, options)\n      removeListener = () => node.removeEventListener(type, handler, options)\n    } else {\n      const legacyMediaQueryList = <MediaQueryList>node\n      legacyMediaQueryList.addListener(handler)\n      removeListener = () => legacyMediaQueryList.removeListener(handler)\n    }\n\n    listeners.push(removeListener)\n    return self\n  }\n\n  function clear(): void {\n    listeners = listeners.filter((remove) => remove())\n  }\n\n  const self: EventStoreType = {\n    add,\n    clear\n  }\n  return self\n}\n","import { EngineType } from './Engine'\nimport { EventStore } from './EventStore'\nimport { WindowType } from './utils'\n\nexport type AnimationsUpdateType = (engine: EngineType) => void\n\nexport type AnimationsType = {\n  init: () => void\n  destroy: () => void\n  start: () => void\n  stop: () => void\n  update: () => void\n}\n\nexport function Animations(\n  ownerDocument: Document,\n  ownerWindow: WindowType,\n  update: AnimationsType['update']\n): AnimationsType {\n  const documentVisibleHandler = EventStore()\n  const timeStep = 1000 / 60\n  let lastTimeStamp: number | null = null\n  let animationFrame = 0\n  let lag = 0\n\n  function init(): void {\n    documentVisibleHandler.add(ownerDocument, 'visibilitychange', () => {\n      if (ownerDocument.hidden) reset()\n    })\n  }\n\n  function destroy(): void {\n    stop()\n    documentVisibleHandler.clear()\n  }\n\n  function animate(timeStamp: DOMHighResTimeStamp): void {\n    if (!animationFrame) return\n    if (!lastTimeStamp) lastTimeStamp = timeStamp\n\n    const timeElapsed = timeStamp - lastTimeStamp\n    lastTimeStamp = timeStamp\n    lag += timeElapsed\n\n    while (lag >= timeStep) {\n      update()\n      lag -= timeStep\n    }\n\n    if (animationFrame) ownerWindow.requestAnimationFrame(animate)\n  }\n\n  function start(): void {\n    if (animationFrame) return\n\n    animationFrame = ownerWindow.requestAnimationFrame(animate)\n  }\n\n  function stop(): void {\n    ownerWindow.cancelAnimationFrame(animationFrame)\n    lastTimeStamp = null\n    lag = 0\n    animationFrame = 0\n  }\n\n  function reset(): void {\n    lastTimeStamp = null\n    lag = 0\n  }\n\n  const self: AnimationsType = {\n    init,\n    destroy,\n    start,\n    stop,\n    update\n  }\n  return self\n}\n","import { NodeRectType } from './NodeRects'\n\nexport type AxisOptionType = 'x' | 'y'\nexport type AxisDirectionOptionType = 'ltr' | 'rtl'\ntype AxisEdgeType = 'top' | 'right' | 'bottom' | 'left'\n\nexport type AxisType = {\n  scroll: AxisOptionType\n  cross: AxisOptionType\n  startEdge: AxisEdgeType\n  endEdge: AxisEdgeType\n  measureSize: (nodeRect: NodeRectType) => number\n  direction: (n: number) => number\n}\n\nexport function Axis(\n  axis: AxisOptionType,\n  contentDirection: AxisDirectionOptionType\n): AxisType {\n  const isRightToLeft = contentDirection === 'rtl'\n  const isVertical = axis === 'y'\n  const scroll = isVertical ? 'y' : 'x'\n  const cross = isVertical ? 'x' : 'y'\n  const sign = !isVertical && isRightToLeft ? -1 : 1\n  const startEdge = getStartEdge()\n  const endEdge = getEndEdge()\n\n  function measureSize(nodeRect: NodeRectType): number {\n    const { height, width } = nodeRect\n    return isVertical ? height : width\n  }\n\n  function getStartEdge(): AxisEdgeType {\n    if (isVertical) return 'top'\n    return isRightToLeft ? 'right' : 'left'\n  }\n\n  function getEndEdge(): AxisEdgeType {\n    if (isVertical) return 'bottom'\n    return isRightToLeft ? 'left' : 'right'\n  }\n\n  function direction(n: number): number {\n    return n * sign\n  }\n\n  const self: AxisType = {\n    scroll,\n    cross,\n    startEdge,\n    endEdge,\n    measureSize,\n    direction\n  }\n  return self\n}\n","import { mathAbs } from './utils'\n\nexport type LimitType = {\n  min: number\n  max: number\n  length: number\n  constrain: (n: number) => number\n  reachedAny: (n: number) => boolean\n  reachedMax: (n: number) => boolean\n  reachedMin: (n: number) => boolean\n  removeOffset: (n: number) => number\n}\n\nexport function Limit(min: number = 0, max: number = 0): LimitType {\n  const length = mathAbs(min - max)\n\n  function reachedMin(n: number): boolean {\n    return n < min\n  }\n\n  function reachedMax(n: number): boolean {\n    return n > max\n  }\n\n  function reachedAny(n: number): boolean {\n    return reachedMin(n) || reachedMax(n)\n  }\n\n  function constrain(n: number): number {\n    if (!reachedAny(n)) return n\n    return reachedMin(n) ? min : max\n  }\n\n  function removeOffset(n: number): number {\n    if (!length) return n\n    return n - length * Math.ceil((n - max) / length)\n  }\n\n  const self: LimitType = {\n    length,\n    max,\n    min,\n    constrain,\n    reachedAny,\n    reachedMax,\n    reachedMin,\n    removeOffset\n  }\n  return self\n}\n","import { Limit } from './Limit'\nimport { mathAbs } from './utils'\n\nexport type CounterType = {\n  get: () => number\n  set: (n: number) => CounterType\n  add: (n: number) => CounterType\n  clone: () => CounterType\n}\n\nexport function Counter(\n  max: number,\n  start: number,\n  loop: boolean\n): CounterType {\n  const { constrain } = Limit(0, max)\n  const loopEnd = max + 1\n  let counter = withinLimit(start)\n\n  function withinLimit(n: number): number {\n    return !loop ? constrain(n) : mathAbs((loopEnd + n) % loopEnd)\n  }\n\n  function get(): number {\n    return counter\n  }\n\n  function set(n: number): CounterType {\n    counter = withinLimit(n)\n    return self\n  }\n\n  function add(n: number): CounterType {\n    return clone().set(get() + n)\n  }\n\n  function clone(): CounterType {\n    return Counter(max, get(), loop)\n  }\n\n  const self: CounterType = {\n    get,\n    set,\n    add,\n    clone\n  }\n  return self\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\nimport { AnimationsType } from './Animations'\nimport { CounterType } from './Counter'\nimport { DragTrackerType, PointerEventType } from './DragTracker'\nimport { EventHandlerType } from './EventHandler'\nimport { AxisType } from './Axis'\nimport { EventStore } from './EventStore'\nimport { ScrollBodyType } from './ScrollBody'\nimport { ScrollTargetType } from './ScrollTarget'\nimport { ScrollToType } from './ScrollTo'\nimport { Vector1DType } from './Vector1d'\nimport { PercentOfViewType } from './PercentOfView'\nimport { Limit } from './Limit'\nimport {\n  deltaAbs,\n  factorAbs,\n  isBoolean,\n  isMouseEvent,\n  mathAbs,\n  mathSign,\n  WindowType\n} from './utils'\n\ntype DragHandlerCallbackType = (\n  emblaApi: EmblaCarouselType,\n  evt: PointerEventType\n) => boolean | void\n\nexport type DragHandlerOptionType = boolean | DragHandlerCallbackType\n\nexport type DragHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  destroy: () => void\n  pointerDown: () => boolean\n}\n\nexport function DragHandler(\n  axis: AxisType,\n  rootNode: HTMLElement,\n  ownerDocument: Document,\n  ownerWindow: WindowType,\n  target: Vector1DType,\n  dragTracker: DragTrackerType,\n  location: Vector1DType,\n  animation: AnimationsType,\n  scrollTo: ScrollToType,\n  scrollBody: ScrollBodyType,\n  scrollTarget: ScrollTargetType,\n  index: CounterType,\n  eventHandler: EventHandlerType,\n  percentOfView: PercentOfViewType,\n  dragFree: boolean,\n  dragThreshold: number,\n  skipSnaps: boolean,\n  baseFriction: number,\n  watchDrag: DragHandlerOptionType\n): DragHandlerType {\n  const { cross: crossAxis, direction } = axis\n  const focusNodes = ['INPUT', 'SELECT', 'TEXTAREA']\n  const nonPassiveEvent = { passive: false }\n  const initEvents = EventStore()\n  const dragEvents = EventStore()\n  const goToNextThreshold = Limit(50, 225).constrain(percentOfView.measure(20))\n  const snapForceBoost = { mouse: 300, touch: 400 }\n  const freeForceBoost = { mouse: 500, touch: 600 }\n  const baseSpeed = dragFree ? 43 : 25\n\n  let isMoving = false\n  let startScroll = 0\n  let startCross = 0\n  let pointerIsDown = false\n  let preventScroll = false\n  let preventClick = false\n  let isMouse = false\n\n  function init(emblaApi: EmblaCarouselType): void {\n    if (!watchDrag) return\n\n    function downIfAllowed(evt: PointerEventType): void {\n      if (isBoolean(watchDrag) || watchDrag(emblaApi, evt)) down(evt)\n    }\n\n    const node = rootNode\n    initEvents\n      .add(node, 'dragstart', (evt) => evt.preventDefault(), nonPassiveEvent)\n      .add(node, 'touchmove', () => undefined, nonPassiveEvent)\n      .add(node, 'touchend', () => undefined)\n      .add(node, 'touchstart', downIfAllowed)\n      .add(node, 'mousedown', downIfAllowed)\n      .add(node, 'touchcancel', up)\n      .add(node, 'contextmenu', up)\n      .add(node, 'click', click, true)\n  }\n\n  function destroy(): void {\n    initEvents.clear()\n    dragEvents.clear()\n  }\n\n  function addDragEvents(): void {\n    const node = isMouse ? ownerDocument : rootNode\n    dragEvents\n      .add(node, 'touchmove', move, nonPassiveEvent)\n      .add(node, 'touchend', up)\n      .add(node, 'mousemove', move, nonPassiveEvent)\n      .add(node, 'mouseup', up)\n  }\n\n  function isFocusNode(node: Element): boolean {\n    const nodeName = node.nodeName || ''\n    return focusNodes.includes(nodeName)\n  }\n\n  function forceBoost(): number {\n    const boost = dragFree ? freeForceBoost : snapForceBoost\n    const type = isMouse ? 'mouse' : 'touch'\n    return boost[type]\n  }\n\n  function allowedForce(force: number, targetChanged: boolean): number {\n    const next = index.add(mathSign(force) * -1)\n    const baseForce = scrollTarget.byDistance(force, !dragFree).distance\n\n    if (dragFree || mathAbs(force) < goToNextThreshold) return baseForce\n    if (skipSnaps && targetChanged) return baseForce * 0.5\n\n    return scrollTarget.byIndex(next.get(), 0).distance\n  }\n\n  function down(evt: PointerEventType): void {\n    const isMouseEvt = isMouseEvent(evt, ownerWindow)\n    isMouse = isMouseEvt\n    preventClick = dragFree && isMouseEvt && !evt.buttons && isMoving\n    isMoving = deltaAbs(target.get(), location.get()) >= 2\n\n    if (isMouseEvt && evt.button !== 0) return\n    if (isFocusNode(evt.target as Element)) return\n\n    pointerIsDown = true\n    dragTracker.pointerDown(evt)\n    scrollBody.useFriction(0).useDuration(0)\n    target.set(location)\n    addDragEvents()\n    startScroll = dragTracker.readPoint(evt)\n    startCross = dragTracker.readPoint(evt, crossAxis)\n    eventHandler.emit('pointerDown')\n  }\n\n  function move(evt: PointerEventType): void {\n    const isTouchEvt = !isMouseEvent(evt, ownerWindow)\n    if (isTouchEvt && evt.touches.length >= 2) return up(evt)\n\n    const lastScroll = dragTracker.readPoint(evt)\n    const lastCross = dragTracker.readPoint(evt, crossAxis)\n    const diffScroll = deltaAbs(lastScroll, startScroll)\n    const diffCross = deltaAbs(lastCross, startCross)\n\n    if (!preventScroll && !isMouse) {\n      if (!evt.cancelable) return up(evt)\n      preventScroll = diffScroll > diffCross\n      if (!preventScroll) return up(evt)\n    }\n    const diff = dragTracker.pointerMove(evt)\n    if (diffScroll > dragThreshold) preventClick = true\n\n    scrollBody.useFriction(0.3).useDuration(0.75)\n    animation.start()\n    target.add(direction(diff))\n    evt.preventDefault()\n  }\n\n  function up(evt: PointerEventType): void {\n    const currentLocation = scrollTarget.byDistance(0, false)\n    const targetChanged = currentLocation.index !== index.get()\n    const rawForce = dragTracker.pointerUp(evt) * forceBoost()\n    const force = allowedForce(direction(rawForce), targetChanged)\n    const forceFactor = factorAbs(rawForce, force)\n    const speed = baseSpeed - 10 * forceFactor\n    const friction = baseFriction + forceFactor / 50\n\n    preventScroll = false\n    pointerIsDown = false\n    dragEvents.clear()\n    scrollBody.useDuration(speed).useFriction(friction)\n    scrollTo.distance(force, !dragFree)\n    isMouse = false\n    eventHandler.emit('pointerUp')\n  }\n\n  function click(evt: MouseEvent): void {\n    if (preventClick) {\n      evt.stopPropagation()\n      evt.preventDefault()\n      preventClick = false\n    }\n  }\n\n  function pointerDown(): boolean {\n    return pointerIsDown\n  }\n\n  const self: DragHandlerType = {\n    init,\n    destroy,\n    pointerDown\n  }\n  return self\n}\n","import { AxisOptionType, AxisType } from './Axis'\nimport { isMouseEvent, mathAbs, WindowType } from './utils'\n\ntype PointerCoordType = keyof Touch | keyof MouseEvent\nexport type PointerEventType = TouchEvent | MouseEvent\n\nexport type DragTrackerType = {\n  pointerDown: (evt: PointerEventType) => number\n  pointerMove: (evt: PointerEventType) => number\n  pointerUp: (evt: PointerEventType) => number\n  readPoint: (evt: PointerEventType, evtAxis?: AxisOptionType) => number\n}\n\nexport function DragTracker(\n  axis: AxisType,\n  ownerWindow: WindowType\n): DragTrackerType {\n  const logInterval = 170\n\n  let startEvent: PointerEventType\n  let lastEvent: PointerEventType\n\n  function readTime(evt: PointerEventType): number {\n    return evt.timeStamp\n  }\n\n  function readPoint(evt: PointerEventType, evtAxis?: AxisOptionType): number {\n    const property = evtAxis || axis.scroll\n    const coord: PointerCoordType = `client${property === 'x' ? 'X' : 'Y'}`\n    return (isMouseEvent(evt, ownerWindow) ? evt : evt.touches[0])[coord]\n  }\n\n  function pointerDown(evt: PointerEventType): number {\n    startEvent = evt\n    lastEvent = evt\n    return readPoint(evt)\n  }\n\n  function pointerMove(evt: PointerEventType): number {\n    const diff = readPoint(evt) - readPoint(lastEvent)\n    const expired = readTime(evt) - readTime(startEvent) > logInterval\n\n    lastEvent = evt\n    if (expired) startEvent = evt\n    return diff\n  }\n\n  function pointerUp(evt: PointerEventType): number {\n    if (!startEvent || !lastEvent) return 0\n    const diffDrag = readPoint(lastEvent) - readPoint(startEvent)\n    const diffTime = readTime(evt) - readTime(startEvent)\n    const expired = readTime(evt) - readTime(lastEvent) > logInterval\n    const force = diffDrag / diffTime\n    const isFlick = diffTime && !expired && mathAbs(force) > 0.1\n\n    return isFlick ? force : 0\n  }\n\n  const self: DragTrackerType = {\n    pointerDown,\n    pointerMove,\n    pointerUp,\n    readPoint\n  }\n  return self\n}\n","export type NodeRectType = {\n  top: number\n  right: number\n  bottom: number\n  left: number\n  width: number\n  height: number\n}\n\nexport type NodeRectsType = {\n  measure: (node: HTMLElement) => NodeRectType\n}\n\nexport function NodeRects(): NodeRectsType {\n  function measure(node: HTMLElement): NodeRectType {\n    const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = node\n    const offset: NodeRectType = {\n      top: offsetTop,\n      right: offsetLeft + offsetWidth,\n      bottom: offsetTop + offsetHeight,\n      left: offsetLeft,\n      width: offsetWidth,\n      height: offsetHeight\n    }\n\n    return offset\n  }\n\n  const self: NodeRectsType = {\n    measure\n  }\n  return self\n}\n","export type PercentOfViewType = {\n  measure: (n: number) => number\n}\n\nexport function PercentOfView(viewSize: number): PercentOfViewType {\n  function measure(n: number): number {\n    return viewSize * (n / 100)\n  }\n\n  const self: PercentOfViewType = {\n    measure\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { EmblaCarouselType } from './EmblaCarousel'\nimport { EventHandlerType } from './EventHandler'\nimport { NodeRectsType } from './NodeRects'\nimport { isBoolean, mathAbs, WindowType } from './utils'\n\ntype ResizeHandlerCallbackType = (\n  emblaApi: EmblaCarouselType,\n  entries: ResizeObserverEntry[]\n) => boolean | void\n\nexport type ResizeHandlerOptionType = boolean | ResizeHandlerCallbackType\n\nexport type ResizeHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  destroy: () => void\n}\n\nexport function ResizeHandler(\n  container: HTMLElement,\n  eventHandler: EventHandlerType,\n  ownerWindow: WindowType,\n  slides: HTMLElement[],\n  axis: AxisType,\n  watchResize: ResizeHandlerOptionType,\n  nodeRects: NodeRectsType\n): ResizeHandlerType {\n  let resizeObserver: ResizeObserver\n  let containerSize: number\n  let slideSizes: number[] = []\n  let destroyed = false\n\n  function readSize(node: HTMLElement): number {\n    return axis.measureSize(nodeRects.measure(node))\n  }\n\n  function init(emblaApi: EmblaCarouselType): void {\n    if (!watchResize) return\n\n    containerSize = readSize(container)\n    slideSizes = slides.map(readSize)\n\n    function defaultCallback(entries: ResizeObserverEntry[]): void {\n      for (const entry of entries) {\n        const isContainer = entry.target === container\n        const slideIndex = slides.indexOf(<HTMLElement>entry.target)\n        const lastSize = isContainer ? containerSize : slideSizes[slideIndex]\n        const newSize = readSize(isContainer ? container : slides[slideIndex])\n        const diffSize = mathAbs(newSize - lastSize)\n\n        if (diffSize >= 0.5) {\n          ownerWindow.requestAnimationFrame(() => {\n            emblaApi.reInit()\n            eventHandler.emit('resize')\n          })\n          break\n        }\n      }\n    }\n\n    resizeObserver = new ResizeObserver((entries) => {\n      if (destroyed) return\n      if (isBoolean(watchResize) || watchResize(emblaApi, entries)) {\n        defaultCallback(entries)\n      }\n    })\n\n    const observeNodes = [container].concat(slides)\n    observeNodes.forEach((node) => resizeObserver.observe(node))\n  }\n\n  function destroy(): void {\n    if (resizeObserver) resizeObserver.disconnect()\n    destroyed = true\n  }\n\n  const self: ResizeHandlerType = {\n    init,\n    destroy\n  }\n  return self\n}\n","import { mathSign, mathAbs } from './utils'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollBodyType = {\n  direction: () => number\n  duration: () => number\n  velocity: () => number\n  seek: () => ScrollBodyType\n  settled: () => boolean\n  useBaseFriction: () => ScrollBodyType\n  useBaseDuration: () => ScrollBodyType\n  useFriction: (n: number) => ScrollBodyType\n  useDuration: (n: number) => ScrollBodyType\n}\n\nexport function ScrollBody(\n  location: Vector1DType,\n  target: Vector1DType,\n  baseDuration: number,\n  baseFriction: number\n): ScrollBodyType {\n  let bodyVelocity = 0\n  let scrollDirection = 0\n  let scrollDuration = baseDuration\n  let scrollFriction = baseFriction\n  let rawLocation = location.get()\n  let rawLocationPrevious = 0\n\n  function seek(): ScrollBodyType {\n    const diff = target.get() - location.get()\n    const isInstant = !scrollDuration\n    let directionDiff = 0\n\n    if (isInstant) {\n      bodyVelocity = 0\n      location.set(target)\n\n      directionDiff = diff\n    } else {\n      bodyVelocity += diff / scrollDuration\n      bodyVelocity *= scrollFriction\n      rawLocation += bodyVelocity\n      location.add(bodyVelocity)\n\n      directionDiff = rawLocation - rawLocationPrevious\n    }\n\n    scrollDirection = mathSign(directionDiff)\n    rawLocationPrevious = rawLocation\n    return self\n  }\n\n  function settled(): boolean {\n    const diff = target.get() - location.get()\n    return mathAbs(diff) < 0.001\n  }\n\n  function duration(): number {\n    return scrollDuration\n  }\n\n  function direction(): number {\n    return scrollDirection\n  }\n\n  function velocity(): number {\n    return bodyVelocity\n  }\n\n  function useBaseDuration(): ScrollBodyType {\n    return useDuration(baseDuration)\n  }\n\n  function useBaseFriction(): ScrollBodyType {\n    return useFriction(baseFriction)\n  }\n\n  function useDuration(n: number): ScrollBodyType {\n    scrollDuration = n\n    return self\n  }\n\n  function useFriction(n: number): ScrollBodyType {\n    scrollFriction = n\n    return self\n  }\n\n  const self: ScrollBodyType = {\n    direction,\n    duration,\n    velocity,\n    seek,\n    settled,\n    useBaseFriction,\n    useBaseDuration,\n    useFriction,\n    useDuration\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { ScrollBodyType } from './ScrollBody'\nimport { Vector1DType } from './Vector1d'\nimport { mathAbs } from './utils'\nimport { PercentOfViewType } from './PercentOfView'\n\nexport type ScrollBoundsType = {\n  shouldConstrain: () => boolean\n  constrain: (pointerDown: boolean) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function ScrollBounds(\n  limit: LimitType,\n  location: Vector1DType,\n  target: Vector1DType,\n  scrollBody: ScrollBodyType,\n  percentOfView: PercentOfViewType\n): ScrollBoundsType {\n  const pullBackThreshold = percentOfView.measure(10)\n  const edgeOffsetTolerance = percentOfView.measure(50)\n  const frictionLimit = Limit(0.1, 0.99)\n  let disabled = false\n\n  function shouldConstrain(): boolean {\n    if (disabled) return false\n    if (!limit.reachedAny(target.get())) return false\n    if (!limit.reachedAny(location.get())) return false\n    return true\n  }\n\n  function constrain(pointerDown: boolean): void {\n    if (!shouldConstrain()) return\n    const edge = limit.reachedMin(location.get()) ? 'min' : 'max'\n    const diffToEdge = mathAbs(limit[edge] - location.get())\n    const diffToTarget = target.get() - location.get()\n    const friction = frictionLimit.constrain(diffToEdge / edgeOffsetTolerance)\n\n    target.subtract(diffToTarget * friction)\n\n    if (!pointerDown && mathAbs(diffToTarget) < pullBackThreshold) {\n      target.set(limit.constrain(target.get()))\n      scrollBody.useDuration(25).useBaseFriction()\n    }\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  const self: ScrollBoundsType = {\n    shouldConstrain,\n    constrain,\n    toggleActive\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayIsLastIndex, arrayLast, deltaAbs } from './utils'\n\nexport type ScrollContainOptionType = false | 'trimSnaps' | 'keepSnaps'\n\nexport type ScrollContainType = {\n  snapsContained: number[]\n  scrollContainLimit: LimitType\n}\n\nexport function ScrollContain(\n  viewSize: number,\n  contentSize: number,\n  snapsAligned: number[],\n  containScroll: ScrollContainOptionType,\n  pixelTolerance: number\n): ScrollContainType {\n  const scrollBounds = Limit(-contentSize + viewSize, 0)\n  const snapsBounded = measureBounded()\n  const scrollContainLimit = findScrollContainLimit()\n  const snapsContained = measureContained()\n\n  function usePixelTolerance(bound: number, snap: number): boolean {\n    return deltaAbs(bound, snap) < 1\n  }\n\n  function findScrollContainLimit(): LimitType {\n    const startSnap = snapsBounded[0]\n    const endSnap = arrayLast(snapsBounded)\n    const min = snapsBounded.lastIndexOf(startSnap)\n    const max = snapsBounded.indexOf(endSnap) + 1\n    return Limit(min, max)\n  }\n\n  function measureBounded(): number[] {\n    return snapsAligned\n      .map((snapAligned, index) => {\n        const { min, max } = scrollBounds\n        const snap = scrollBounds.constrain(snapAligned)\n        const isFirst = !index\n        const isLast = arrayIsLastIndex(snapsAligned, index)\n        if (isFirst) return max\n        if (isLast) return min\n        if (usePixelTolerance(min, snap)) return min\n        if (usePixelTolerance(max, snap)) return max\n        return snap\n      })\n      .map((scrollBound) => parseFloat(scrollBound.toFixed(3)))\n  }\n\n  function measureContained(): number[] {\n    if (contentSize <= viewSize + pixelTolerance) return [scrollBounds.max]\n    if (containScroll === 'keepSnaps') return snapsBounded\n    const { min, max } = scrollContainLimit\n    return snapsBounded.slice(min, max)\n  }\n\n  const self: ScrollContainType = {\n    snapsContained,\n    scrollContainLimit\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayLast } from './utils'\n\nexport type ScrollLimitType = {\n  limit: LimitType\n}\n\nexport function ScrollLimit(\n  contentSize: number,\n  scrollSnaps: number[],\n  loop: boolean\n): ScrollLimitType {\n  const max = scrollSnaps[0]\n  const min = loop ? max - contentSize : arrayLast(scrollSnaps)\n  const limit = Limit(min, max)\n\n  const self: ScrollLimitType = {\n    limit\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollLooperType = {\n  loop: (direction: number) => void\n}\n\nexport function ScrollLooper(\n  contentSize: number,\n  limit: LimitType,\n  location: Vector1DType,\n  vectors: Vector1DType[]\n): ScrollLooperType {\n  const jointSafety = 0.1\n  const min = limit.min + jointSafety\n  const max = limit.max + jointSafety\n  const { reachedMin, reachedMax } = Limit(min, max)\n\n  function shouldLoop(direction: number): boolean {\n    if (direction === 1) return reachedMax(location.get())\n    if (direction === -1) return reachedMin(location.get())\n    return false\n  }\n\n  function loop(direction: number): void {\n    if (!shouldLoop(direction)) return\n\n    const loopDistance = contentSize * (direction * -1)\n    vectors.forEach((v) => v.add(loopDistance))\n  }\n\n  const self: ScrollLooperType = {\n    loop\n  }\n  return self\n}\n","import { LimitType } from './Limit'\n\nexport type ScrollProgressType = {\n  get: (n: number) => number\n}\n\nexport function ScrollProgress(limit: LimitType): ScrollProgressType {\n  const { max, length } = limit\n\n  function get(n: number): number {\n    const currentLocation = n - max\n    return length ? currentLocation / -length : 0\n  }\n\n  const self: ScrollProgressType = {\n    get\n  }\n  return self\n}\n","import { AlignmentType } from './Alignment'\nimport { AxisType } from './Axis'\nimport { NodeRectType } from './NodeRects'\nimport { SlidesToScrollType } from './SlidesToScroll'\nimport { arrayLast, mathAbs } from './utils'\n\nexport type ScrollSnapsType = {\n  snaps: number[]\n  snapsAligned: number[]\n}\n\nexport function ScrollSnaps(\n  axis: AxisType,\n  alignment: AlignmentType,\n  containerRect: NodeRectType,\n  slideRects: NodeRectType[],\n  slidesToScroll: SlidesToScrollType\n): ScrollSnapsType {\n  const { startEdge, endEdge } = axis\n  const { groupSlides } = slidesToScroll\n  const alignments = measureSizes().map(alignment.measure)\n  const snaps = measureUnaligned()\n  const snapsAligned = measureAligned()\n\n  function measureSizes(): number[] {\n    return groupSlides(slideRects)\n      .map((rects) => arrayLast(rects)[endEdge] - rects[0][startEdge])\n      .map(mathAbs)\n  }\n\n  function measureUnaligned(): number[] {\n    return slideRects\n      .map((rect) => containerRect[startEdge] - rect[startEdge])\n      .map((snap) => -mathAbs(snap))\n  }\n\n  function measureAligned(): number[] {\n    return groupSlides(snaps)\n      .map((g) => g[0])\n      .map((snap, index) => snap + alignments[index])\n  }\n\n  const self: ScrollSnapsType = {\n    snaps,\n    snapsAligned\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { ScrollContainOptionType } from './ScrollContain'\nimport { SlidesToScrollType } from './SlidesToScroll'\nimport {\n  arrayFromNumber,\n  arrayIsLastIndex,\n  arrayLast,\n  arrayLastIndex\n} from './utils'\n\nexport type SlideRegistryType = {\n  slideRegistry: number[][]\n}\n\nexport function SlideRegistry(\n  containSnaps: boolean,\n  containScroll: ScrollContainOptionType,\n  scrollSnaps: number[],\n  scrollContainLimit: LimitType,\n  slidesToScroll: SlidesToScrollType,\n  slideIndexes: number[]\n): SlideRegistryType {\n  const { groupSlides } = slidesToScroll\n  const { min, max } = scrollContainLimit\n  const slideRegistry = createSlideRegistry()\n\n  function createSlideRegistry(): number[][] {\n    const groupedSlideIndexes = groupSlides(slideIndexes)\n    const doNotContain = !containSnaps || containScroll === 'keepSnaps'\n\n    if (scrollSnaps.length === 1) return [slideIndexes]\n    if (doNotContain) return groupedSlideIndexes\n\n    return groupedSlideIndexes.slice(min, max).map((group, index, groups) => {\n      const isFirst = !index\n      const isLast = arrayIsLastIndex(groups, index)\n\n      if (isFirst) {\n        const range = arrayLast(groups[0]) + 1\n        return arrayFromNumber(range)\n      }\n      if (isLast) {\n        const range = arrayLastIndex(slideIndexes) - arrayLast(groups)[0] + 1\n        return arrayFromNumber(range, arrayLast(groups)[0])\n      }\n      return group\n    })\n  }\n\n  const self: SlideRegistryType = {\n    slideRegistry\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { Vector1DType } from './Vector1d'\nimport { arrayLast, mathAbs, mathSign } from './utils'\n\nexport type TargetType = {\n  distance: number\n  index: number\n}\n\nexport type ScrollTargetType = {\n  byIndex: (target: number, direction: number) => TargetType\n  byDistance: (force: number, snap: boolean) => TargetType\n  shortcut: (target: number, direction: number) => number\n}\n\nexport function ScrollTarget(\n  loop: boolean,\n  scrollSnaps: number[],\n  contentSize: number,\n  limit: LimitType,\n  targetVector: Vector1DType\n): ScrollTargetType {\n  const { reachedAny, removeOffset, constrain } = limit\n\n  function minDistance(distances: number[]): number {\n    return distances.concat().sort((a, b) => mathAbs(a) - mathAbs(b))[0]\n  }\n\n  function findTargetSnap(target: number): TargetType {\n    const distance = loop ? removeOffset(target) : constrain(target)\n    const ascDiffsToSnaps = scrollSnaps\n      .map((snap, index) => ({ diff: shortcut(snap - distance, 0), index }))\n      .sort((d1, d2) => mathAbs(d1.diff) - mathAbs(d2.diff))\n\n    const { index } = ascDiffsToSnaps[0]\n    return { index, distance }\n  }\n\n  function shortcut(target: number, direction: number): number {\n    const targets = [target, target + contentSize, target - contentSize]\n\n    if (!loop) return target\n    if (!direction) return minDistance(targets)\n\n    const matchingTargets = targets.filter((t) => mathSign(t) === direction)\n    if (matchingTargets.length) return minDistance(matchingTargets)\n    return arrayLast(targets) - contentSize\n  }\n\n  function byIndex(index: number, direction: number): TargetType {\n    const diffToSnap = scrollSnaps[index] - targetVector.get()\n    const distance = shortcut(diffToSnap, direction)\n    return { index, distance }\n  }\n\n  function byDistance(distance: number, snap: boolean): TargetType {\n    const target = targetVector.get() + distance\n    const { index, distance: targetSnapDistance } = findTargetSnap(target)\n    const reachedBound = !loop && reachedAny(target)\n\n    if (!snap || reachedBound) return { index, distance }\n\n    const diffToSnap = scrollSnaps[index] - targetSnapDistance\n    const snapDistance = distance + shortcut(diffToSnap, 0)\n\n    return { index, distance: snapDistance }\n  }\n\n  const self: ScrollTargetType = {\n    byDistance,\n    byIndex,\n    shortcut\n  }\n  return self\n}\n","import { AnimationsType } from './Animations'\nimport { CounterType } from './Counter'\nimport { EventHandlerType } from './EventHandler'\nimport { ScrollTargetType, TargetType } from './ScrollTarget'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollToType = {\n  distance: (n: number, snap: boolean) => void\n  index: (n: number, direction: number) => void\n}\n\nexport function ScrollTo(\n  animation: AnimationsType,\n  indexCurrent: CounterType,\n  indexPrevious: CounterType,\n  scrollTarget: ScrollTargetType,\n  targetVector: Vector1DType,\n  eventHandler: EventHandlerType\n): ScrollToType {\n  function scrollTo(target: TargetType): void {\n    const distanceDiff = target.distance\n    const indexDiff = target.index !== indexCurrent.get()\n\n    targetVector.add(distanceDiff)\n\n    if (distanceDiff) animation.start()\n\n    if (indexDiff) {\n      indexPrevious.set(indexCurrent.get())\n      indexCurrent.set(target.index)\n      eventHandler.emit('select')\n    }\n  }\n\n  function distance(n: number, snap: boolean): void {\n    const target = scrollTarget.byDistance(n, snap)\n    scrollTo(target)\n  }\n\n  function index(n: number, direction: number): void {\n    const targetIndex = indexCurrent.clone().set(n)\n    const target = scrollTarget.byIndex(targetIndex.get(), direction)\n    scrollTo(target)\n  }\n\n  const self: ScrollToType = {\n    distance,\n    index\n  }\n  return self\n}\n","import { EventHandlerType } from './EventHandler'\nimport { EventStoreType } from './EventStore'\nimport { ScrollBodyType } from './ScrollBody'\nimport { ScrollToType } from './ScrollTo'\nimport { SlideRegistryType } from './SlideRegistry'\nimport { isNumber } from './utils'\n\nexport type SlideFocusType = {\n  init: () => void\n}\n\nexport function SlideFocus(\n  root: HTMLElement,\n  slides: HTMLElement[],\n  slideRegistry: SlideRegistryType['slideRegistry'],\n  scrollTo: ScrollToType,\n  scrollBody: ScrollBodyType,\n  eventStore: EventStoreType,\n  eventHandler: EventHandlerType\n): SlideFocusType {\n  let lastTabPressTime = 0\n\n  function init(): void {\n    eventStore.add(document, 'keydown', registerTabPress, false)\n    slides.forEach(addSlideFocusEvent)\n  }\n\n  function registerTabPress(event: KeyboardEvent): void {\n    if (event.code === 'Tab') lastTabPressTime = new Date().getTime()\n  }\n\n  function addSlideFocusEvent(slide: HTMLElement): void {\n    const focus = (): void => {\n      const nowTime = new Date().getTime()\n      const diffTime = nowTime - lastTabPressTime\n\n      if (diffTime > 10) return\n\n      root.scrollLeft = 0\n      const index = slides.indexOf(slide)\n      const group = slideRegistry.findIndex((group) => group.includes(index))\n\n      if (!isNumber(group)) return\n\n      scrollBody.useDuration(0)\n      scrollTo.index(group, 0)\n      eventHandler.emit('slideFocus')\n    }\n\n    eventStore.add(slide, 'focus', focus, {\n      passive: true,\n      capture: true\n    })\n  }\n\n  const self: SlideFocusType = {\n    init\n  }\n  return self\n}\n","import { isNumber } from './utils'\n\nexport type Vector1DType = {\n  get: () => number\n  set: (n: Vector1DType | number) => void\n  add: (n: Vector1DType | number) => void\n  subtract: (n: Vector1DType | number) => void\n}\n\nexport function Vector1D(initialValue: number): Vector1DType {\n  let value = initialValue\n\n  function get(): number {\n    return value\n  }\n\n  function set(n: Vector1DType | number): void {\n    value = normalizeInput(n)\n  }\n\n  function add(n: Vector1DType | number): void {\n    value += normalizeInput(n)\n  }\n\n  function subtract(n: Vector1DType | number): void {\n    value -= normalizeInput(n)\n  }\n\n  function normalizeInput(n: Vector1DType | number): number {\n    return isNumber(n) ? n : n.get()\n  }\n\n  const self: Vector1DType = {\n    get,\n    set,\n    add,\n    subtract\n  }\n  return self\n}\n","import { AxisType } from './Axis'\n\nexport type TranslateType = {\n  clear: () => void\n  to: (target: number) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function Translate(\n  axis: AxisType,\n  container: HTMLElement\n): TranslateType {\n  const translate = axis.scroll === 'x' ? x : y\n  const containerStyle = container.style\n  let disabled = false\n\n  function x(n: number): string {\n    return `translate3d(${n}px,0px,0px)`\n  }\n\n  function y(n: number): string {\n    return `translate3d(0px,${n}px,0px)`\n  }\n\n  function to(target: number): void {\n    if (disabled) return\n    containerStyle.transform = translate(axis.direction(target))\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  function clear(): void {\n    if (disabled) return\n    containerStyle.transform = ''\n    if (!container.getAttribute('style')) container.removeAttribute('style')\n  }\n\n  const self: TranslateType = {\n    clear,\n    to,\n    toggleActive\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { arrayKeys } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\nimport { Translate, TranslateType } from './Translate'\n\ntype SlideBoundType = {\n  start: number\n  end: number\n}\n\ntype LoopPointType = {\n  loopPoint: number\n  index: number\n  translate: TranslateType\n  slideLocation: Vector1DType\n  target: () => number\n}\n\nexport type SlideLooperType = {\n  canLoop: () => boolean\n  clear: () => void\n  loop: () => void\n  loopPoints: LoopPointType[]\n}\n\nexport function SlideLooper(\n  axis: AxisType,\n  viewSize: number,\n  contentSize: number,\n  slideSizes: number[],\n  slideSizesWithGaps: number[],\n  snaps: number[],\n  scrollSnaps: number[],\n  location: Vector1DType,\n  slides: HTMLElement[]\n): SlideLooperType {\n  const roundingSafety = 0.5\n  const ascItems = arrayKeys(slideSizesWithGaps)\n  const descItems = arrayKeys(slideSizesWithGaps).reverse()\n  const loopPoints = startPoints().concat(endPoints())\n\n  function removeSlideSizes(indexes: number[], from: number): number {\n    return indexes.reduce((a: number, i) => {\n      return a - slideSizesWithGaps[i]\n    }, from)\n  }\n\n  function slidesInGap(indexes: number[], gap: number): number[] {\n    return indexes.reduce((a: number[], i) => {\n      const remainingGap = removeSlideSizes(a, gap)\n      return remainingGap > 0 ? a.concat([i]) : a\n    }, [])\n  }\n\n  function findSlideBounds(offset: number): SlideBoundType[] {\n    return snaps.map((snap, index) => ({\n      start: snap - slideSizes[index] + roundingSafety + offset,\n      end: snap + viewSize - roundingSafety + offset\n    }))\n  }\n\n  function findLoopPoints(\n    indexes: number[],\n    offset: number,\n    isEndEdge: boolean\n  ): LoopPointType[] {\n    const slideBounds = findSlideBounds(offset)\n\n    return indexes.map((index) => {\n      const initial = isEndEdge ? 0 : -contentSize\n      const altered = isEndEdge ? contentSize : 0\n      const boundEdge = isEndEdge ? 'end' : 'start'\n      const loopPoint = slideBounds[index][boundEdge]\n\n      return {\n        index,\n        loopPoint,\n        slideLocation: Vector1D(-1),\n        translate: Translate(axis, slides[index]),\n        target: () => (location.get() > loopPoint ? initial : altered)\n      }\n    })\n  }\n\n  function startPoints(): LoopPointType[] {\n    const gap = scrollSnaps[0]\n    const indexes = slidesInGap(descItems, gap)\n    return findLoopPoints(indexes, contentSize, false)\n  }\n\n  function endPoints(): LoopPointType[] {\n    const gap = viewSize - scrollSnaps[0] - 1\n    const indexes = slidesInGap(ascItems, gap)\n    return findLoopPoints(indexes, -contentSize, true)\n  }\n\n  function canLoop(): boolean {\n    return loopPoints.every(({ index }) => {\n      const otherIndexes = ascItems.filter((i) => i !== index)\n      return removeSlideSizes(otherIndexes, viewSize) <= 0.1\n    })\n  }\n\n  function loop(): void {\n    loopPoints.forEach((loopPoint) => {\n      const { target, translate, slideLocation } = loopPoint\n      const shiftLocation = target()\n      if (shiftLocation === slideLocation.get()) return\n      translate.to(shiftLocation)\n      slideLocation.set(shiftLocation)\n    })\n  }\n\n  function clear(): void {\n    loopPoints.forEach((loopPoint) => loopPoint.translate.clear())\n  }\n\n  const self: SlideLooperType = {\n    canLoop,\n    clear,\n    loop,\n    loopPoints\n  }\n  return self\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\nimport { EventHandlerType } from './EventHandler'\nimport { isBoolean } from './utils'\n\ntype SlidesHandlerCallbackType = (\n  emblaApi: EmblaCarouselType,\n  mutations: MutationRecord[]\n) => boolean | void\n\nexport type SlidesHandlerOptionType = boolean | SlidesHandlerCallbackType\n\nexport type SlidesHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  destroy: () => void\n}\n\nexport function SlidesHandler(\n  container: HTMLElement,\n  eventHandler: EventHandlerType,\n  watchSlides: SlidesHandlerOptionType\n): SlidesHandlerType {\n  let mutationObserver: MutationObserver\n  let destroyed = false\n\n  function init(emblaApi: EmblaCarouselType): void {\n    if (!watchSlides) return\n\n    function defaultCallback(mutations: MutationRecord[]): void {\n      for (const mutation of mutations) {\n        if (mutation.type === 'childList') {\n          emblaApi.reInit()\n          eventHandler.emit('slidesChanged')\n          break\n        }\n      }\n    }\n\n    mutationObserver = new MutationObserver((mutations) => {\n      if (destroyed) return\n      if (isBoolean(watchSlides) || watchSlides(emblaApi, mutations)) {\n        defaultCallback(mutations)\n      }\n    })\n\n    mutationObserver.observe(container, { childList: true })\n  }\n\n  function destroy(): void {\n    if (mutationObserver) mutationObserver.disconnect()\n    destroyed = true\n  }\n\n  const self: SlidesHandlerType = {\n    init,\n    destroy\n  }\n  return self\n}\n","import { EventHandlerType } from './EventHandler'\nimport { objectKeys } from './utils'\n\ntype IntersectionEntryMapType = {\n  [key: number]: IntersectionObserverEntry\n}\n\nexport type SlidesInViewOptionsType = IntersectionObserverInit['threshold']\n\nexport type SlidesInViewType = {\n  init: () => void\n  destroy: () => void\n  get: (inView?: boolean) => number[]\n}\n\nexport function SlidesInView(\n  container: HTMLElement,\n  slides: HTMLElement[],\n  eventHandler: EventHandlerType,\n  threshold: SlidesInViewOptionsType\n): SlidesInViewType {\n  const intersectionEntryMap: IntersectionEntryMapType = {}\n  let inViewCache: number[] | null = null\n  let notInViewCache: number[] | null = null\n  let intersectionObserver: IntersectionObserver\n  let destroyed = false\n\n  function init(): void {\n    intersectionObserver = new IntersectionObserver(\n      (entries) => {\n        if (destroyed) return\n\n        entries.forEach((entry) => {\n          const index = slides.indexOf(<HTMLElement>entry.target)\n          intersectionEntryMap[index] = entry\n        })\n\n        inViewCache = null\n        notInViewCache = null\n        eventHandler.emit('slidesInView')\n      },\n      {\n        root: container.parentElement,\n        threshold\n      }\n    )\n\n    slides.forEach((slide) => intersectionObserver.observe(slide))\n  }\n\n  function destroy(): void {\n    if (intersectionObserver) intersectionObserver.disconnect()\n    destroyed = true\n  }\n\n  function createInViewList(inView: boolean): number[] {\n    return objectKeys(intersectionEntryMap).reduce(\n      (list: number[], slideIndex) => {\n        const index = parseInt(slideIndex)\n        const { isIntersecting } = intersectionEntryMap[index]\n        const inViewMatch = inView && isIntersecting\n        const notInViewMatch = !inView && !isIntersecting\n\n        if (inViewMatch || notInViewMatch) list.push(index)\n        return list\n      },\n      []\n    )\n  }\n\n  function get(inView: boolean = true): number[] {\n    if (inView && inViewCache) return inViewCache\n    if (!inView && notInViewCache) return notInViewCache\n\n    const slideIndexes = createInViewList(inView)\n\n    if (inView) inViewCache = slideIndexes\n    if (!inView) notInViewCache = slideIndexes\n\n    return slideIndexes\n  }\n\n  const self: SlidesInViewType = {\n    init,\n    destroy,\n    get\n  }\n\n  return self\n}\n","import { AxisType } from './Axis'\nimport { NodeRectType } from './NodeRects'\nimport { arrayIsLastIndex, arrayLast, mathAbs, WindowType } from './utils'\n\nexport type SlideSizesType = {\n  slideSizes: number[]\n  slideSizesWithGaps: number[]\n  startGap: number\n  endGap: number\n}\n\nexport function SlideSizes(\n  axis: AxisType,\n  containerRect: NodeRectType,\n  slideRects: NodeRectType[],\n  slides: HTMLElement[],\n  readEdgeGap: boolean,\n  ownerWindow: WindowType\n): SlideSizesType {\n  const { measureSize, startEdge, endEdge } = axis\n  const withEdgeGap = slideRects[0] && readEdgeGap\n  const startGap = measureStartGap()\n  const endGap = measureEndGap()\n  const slideSizes = slideRects.map(measureSize)\n  const slideSizesWithGaps = measureWithGaps()\n\n  function measureStartGap(): number {\n    if (!withEdgeGap) return 0\n    const slideRect = slideRects[0]\n    return mathAbs(containerRect[startEdge] - slideRect[startEdge])\n  }\n\n  function measureEndGap(): number {\n    if (!withEdgeGap) return 0\n    const style = ownerWindow.getComputedStyle(arrayLast(slides))\n    return parseFloat(style.getPropertyValue(`margin-${endEdge}`))\n  }\n\n  function measureWithGaps(): number[] {\n    return slideRects\n      .map((rect, index, rects) => {\n        const isFirst = !index\n        const isLast = arrayIsLastIndex(rects, index)\n        if (isFirst) return slideSizes[index] + startGap\n        if (isLast) return slideSizes[index] + endGap\n        return rects[index + 1][startEdge] - rect[startEdge]\n      })\n      .map(mathAbs)\n  }\n\n  const self: SlideSizesType = {\n    slideSizes,\n    slideSizesWithGaps,\n    startGap,\n    endGap\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { NodeRectType } from './NodeRects'\nimport {\n  arrayKeys,\n  arrayLast,\n  arrayLastIndex,\n  isNumber,\n  mathAbs\n} from './utils'\n\nexport type SlidesToScrollOptionType = 'auto' | number\n\nexport type SlidesToScrollType = {\n  groupSlides: <Type>(array: Type[]) => Type[][]\n}\n\nexport function SlidesToScroll(\n  axis: AxisType,\n  viewSize: number,\n  slidesToScroll: SlidesToScrollOptionType,\n  loop: boolean,\n  containerRect: NodeRectType,\n  slideRects: NodeRectType[],\n  startGap: number,\n  endGap: number,\n  pixelTolerance: number\n): SlidesToScrollType {\n  const { startEdge, endEdge, direction } = axis\n  const groupByNumber = isNumber(slidesToScroll)\n\n  function byNumber<Type>(array: Type[], groupSize: number): Type[][] {\n    return arrayKeys(array)\n      .filter((i) => i % groupSize === 0)\n      .map((i) => array.slice(i, i + groupSize))\n  }\n\n  function bySize<Type>(array: Type[]): Type[][] {\n    if (!array.length) return []\n\n    return arrayKeys(array)\n      .reduce((groups: number[], rectB, index) => {\n        const rectA = arrayLast(groups) || 0\n        const isFirst = rectA === 0\n        const isLast = rectB === arrayLastIndex(array)\n\n        const edgeA = containerRect[startEdge] - slideRects[rectA][startEdge]\n        const edgeB = containerRect[startEdge] - slideRects[rectB][endEdge]\n        const gapA = !loop && isFirst ? direction(startGap) : 0\n        const gapB = !loop && isLast ? direction(endGap) : 0\n        const chunkSize = mathAbs(edgeB - gapB - (edgeA + gapA))\n\n        if (index && chunkSize > viewSize + pixelTolerance) groups.push(rectB)\n        if (isLast) groups.push(array.length)\n        return groups\n      }, [])\n      .map((currentSize, index, groups) => {\n        const previousSize = Math.max(groups[index - 1] || 0)\n        return array.slice(previousSize, currentSize)\n      })\n  }\n\n  function groupSlides<Type>(array: Type[]): Type[][] {\n    return groupByNumber ? byNumber(array, slidesToScroll) : bySize(array)\n  }\n\n  const self: SlidesToScrollType = {\n    groupSlides\n  }\n  return self\n}\n","import { Alignment } from './Alignment'\nimport { Animations, AnimationsType, AnimationsUpdateType } from './Animations'\nimport { Axis, AxisType } from './Axis'\nimport { Counter, CounterType } from './Counter'\nimport { DragHandler, DragHandlerType } from './DragHandler'\nimport { DragTracker } from './DragTracker'\nimport { EventHandlerType } from './EventHandler'\nimport { EventStore, EventStoreType } from './EventStore'\nimport { LimitType } from './Limit'\nimport { NodeRectType, NodeRects } from './NodeRects'\nimport { OptionsType } from './Options'\nimport { PercentOfView, PercentOfViewType } from './PercentOfView'\nimport { ResizeHandler, ResizeHandlerType } from './ResizeHandler'\nimport { ScrollBody, ScrollBodyType } from './ScrollBody'\nimport { ScrollBounds, ScrollBoundsType } from './ScrollBounds'\nimport { ScrollContain } from './ScrollContain'\nimport { ScrollLimit } from './ScrollLimit'\nimport { ScrollLooper, ScrollLooperType } from './ScrollLooper'\nimport { ScrollProgress, ScrollProgressType } from './ScrollProgress'\nimport { ScrollSnaps } from './ScrollSnaps'\nimport { SlideRegistry, SlideRegistryType } from './SlideRegistry'\nimport { ScrollTarget, ScrollTargetType } from './ScrollTarget'\nimport { ScrollTo, ScrollToType } from './ScrollTo'\nimport { SlideFocus, SlideFocusType } from './SlideFocus'\nimport { SlideLooper, SlideLooperType } from './SlideLooper'\nimport { SlidesHandler, SlidesHandlerType } from './SlidesHandler'\nimport { SlidesInView, SlidesInViewType } from './SlidesInView'\nimport { SlideSizes } from './SlideSizes'\nimport { SlidesToScroll, SlidesToScrollType } from './SlidesToScroll'\nimport { Translate, TranslateType } from './Translate'\nimport { arrayKeys, arrayLast, arrayLastIndex, WindowType } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\n\nexport type EngineType = {\n  ownerDocument: Document\n  ownerWindow: WindowType\n  eventHandler: EventHandlerType\n  axis: AxisType\n  animation: AnimationsType\n  scrollBounds: ScrollBoundsType\n  scrollLooper: ScrollLooperType\n  scrollProgress: ScrollProgressType\n  index: CounterType\n  indexPrevious: CounterType\n  limit: LimitType\n  location: Vector1DType\n  options: OptionsType\n  percentOfView: PercentOfViewType\n  scrollBody: ScrollBodyType\n  dragHandler: DragHandlerType\n  eventStore: EventStoreType\n  slideLooper: SlideLooperType\n  slidesInView: SlidesInViewType\n  slidesToScroll: SlidesToScrollType\n  target: Vector1DType\n  translate: TranslateType\n  resizeHandler: ResizeHandlerType\n  slidesHandler: SlidesHandlerType\n  scrollTo: ScrollToType\n  scrollTarget: ScrollTargetType\n  scrollSnapList: number[]\n  scrollSnaps: number[]\n  slideIndexes: number[]\n  slideFocus: SlideFocusType\n  slideRegistry: SlideRegistryType['slideRegistry']\n  containerRect: NodeRectType\n  slideRects: NodeRectType[]\n}\n\nexport function Engine(\n  root: HTMLElement,\n  container: HTMLElement,\n  slides: HTMLElement[],\n  ownerDocument: Document,\n  ownerWindow: WindowType,\n  options: OptionsType,\n  eventHandler: EventHandlerType\n): EngineType {\n  // Options\n  const {\n    align,\n    axis: scrollAxis,\n    direction,\n    startIndex,\n    loop,\n    duration,\n    dragFree,\n    dragThreshold,\n    inViewThreshold,\n    slidesToScroll: groupSlides,\n    skipSnaps,\n    containScroll,\n    watchResize,\n    watchSlides,\n    watchDrag\n  } = options\n\n  // Measurements\n  const pixelTolerance = 2\n  const nodeRects = NodeRects()\n  const containerRect = nodeRects.measure(container)\n  const slideRects = slides.map(nodeRects.measure)\n  const axis = Axis(scrollAxis, direction)\n  const viewSize = axis.measureSize(containerRect)\n  const percentOfView = PercentOfView(viewSize)\n  const alignment = Alignment(align, viewSize)\n  const containSnaps = !loop && !!containScroll\n  const readEdgeGap = loop || !!containScroll\n  const { slideSizes, slideSizesWithGaps, startGap, endGap } = SlideSizes(\n    axis,\n    containerRect,\n    slideRects,\n    slides,\n    readEdgeGap,\n    ownerWindow\n  )\n  const slidesToScroll = SlidesToScroll(\n    axis,\n    viewSize,\n    groupSlides,\n    loop,\n    containerRect,\n    slideRects,\n    startGap,\n    endGap,\n    pixelTolerance\n  )\n  const { snaps, snapsAligned } = ScrollSnaps(\n    axis,\n    alignment,\n    containerRect,\n    slideRects,\n    slidesToScroll\n  )\n  const contentSize = -arrayLast(snaps) + arrayLast(slideSizesWithGaps)\n  const { snapsContained, scrollContainLimit } = ScrollContain(\n    viewSize,\n    contentSize,\n    snapsAligned,\n    containScroll,\n    pixelTolerance\n  )\n  const scrollSnaps = containSnaps ? snapsContained : snapsAligned\n  const { limit } = ScrollLimit(contentSize, scrollSnaps, loop)\n\n  // Indexes\n  const index = Counter(arrayLastIndex(scrollSnaps), startIndex, loop)\n  const indexPrevious = index.clone()\n  const slideIndexes = arrayKeys(slides)\n\n  // Animation\n  const update: AnimationsUpdateType = ({\n    dragHandler,\n    eventHandler,\n    scrollBody,\n    scrollBounds,\n    scrollLooper,\n    slideLooper,\n    translate,\n    location,\n    animation,\n    options: { loop }\n  }) => {\n    if (!loop) scrollBounds.constrain(dragHandler.pointerDown())\n    scrollBody.seek()\n\n    const shouldSettle = scrollBody.settled()\n    const withinBounds = !scrollBounds.shouldConstrain()\n    const hasSettled = loop ? shouldSettle : shouldSettle && withinBounds\n\n    if (hasSettled && !dragHandler.pointerDown()) {\n      animation.stop()\n      eventHandler.emit('settle')\n    }\n    if (!hasSettled) eventHandler.emit('scroll')\n\n    if (loop) {\n      scrollLooper.loop(scrollBody.direction())\n      slideLooper.loop()\n    }\n\n    translate.to(location.get())\n  }\n\n  const animation = Animations(ownerDocument, ownerWindow, () => update(engine))\n\n  // Shared\n  const friction = 0.68\n  const startLocation = scrollSnaps[index.get()]\n  const location = Vector1D(startLocation)\n  const target = Vector1D(startLocation)\n  const scrollBody = ScrollBody(location, target, duration, friction)\n  const scrollTarget = ScrollTarget(\n    loop,\n    scrollSnaps,\n    contentSize,\n    limit,\n    target\n  )\n  const scrollTo = ScrollTo(\n    animation,\n    index,\n    indexPrevious,\n    scrollTarget,\n    target,\n    eventHandler\n  )\n  const scrollProgress = ScrollProgress(limit)\n  const eventStore = EventStore()\n  const slidesInView = SlidesInView(\n    container,\n    slides,\n    eventHandler,\n    inViewThreshold\n  )\n  const { slideRegistry } = SlideRegistry(\n    containSnaps,\n    containScroll,\n    scrollSnaps,\n    scrollContainLimit,\n    slidesToScroll,\n    slideIndexes\n  )\n  const slideFocus = SlideFocus(\n    root,\n    slides,\n    slideRegistry,\n    scrollTo,\n    scrollBody,\n    eventStore,\n    eventHandler\n  )\n\n  // Engine\n  const engine: EngineType = {\n    ownerDocument,\n    ownerWindow,\n    eventHandler,\n    containerRect,\n    slideRects,\n    animation,\n    axis,\n    dragHandler: DragHandler(\n      axis,\n      root,\n      ownerDocument,\n      ownerWindow,\n      target,\n      DragTracker(axis, ownerWindow),\n      location,\n      animation,\n      scrollTo,\n      scrollBody,\n      scrollTarget,\n      index,\n      eventHandler,\n      percentOfView,\n      dragFree,\n      dragThreshold,\n      skipSnaps,\n      friction,\n      watchDrag\n    ),\n    eventStore,\n    percentOfView,\n    index,\n    indexPrevious,\n    limit,\n    location,\n    options,\n    resizeHandler: ResizeHandler(\n      container,\n      eventHandler,\n      ownerWindow,\n      slides,\n      axis,\n      watchResize,\n      nodeRects\n    ),\n    scrollBody,\n    scrollBounds: ScrollBounds(\n      limit,\n      location,\n      target,\n      scrollBody,\n      percentOfView\n    ),\n    scrollLooper: ScrollLooper(contentSize, limit, location, [\n      location,\n      target\n    ]),\n    scrollProgress,\n    scrollSnapList: scrollSnaps.map(scrollProgress.get),\n    scrollSnaps,\n    scrollTarget,\n    scrollTo,\n    slideLooper: SlideLooper(\n      axis,\n      viewSize,\n      contentSize,\n      slideSizes,\n      slideSizesWithGaps,\n      snaps,\n      scrollSnaps,\n      location,\n      slides\n    ),\n    slideFocus,\n    slidesHandler: SlidesHandler(container, eventHandler, watchSlides),\n    slidesInView,\n    slideIndexes,\n    slideRegistry,\n    slidesToScroll,\n    target,\n    translate: Translate(axis, container)\n  }\n\n  return engine\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\n\ntype CallbackType = (emblaApi: EmblaCarouselType, evt: EmblaEventType) => void\ntype ListenersType = Partial<{ [key in EmblaEventType]: CallbackType[] }>\n\nexport type EmblaEventType = EmblaEventListType[keyof EmblaEventListType]\n\nexport interface EmblaEventListType {\n  init: 'init'\n  pointerDown: 'pointerDown'\n  pointerUp: 'pointerUp'\n  slidesChanged: 'slidesChanged'\n  slidesInView: 'slidesInView'\n  scroll: 'scroll'\n  select: 'select'\n  settle: 'settle'\n  destroy: 'destroy'\n  reInit: 'reInit'\n  resize: 'resize'\n  slideFocus: 'slideFocus'\n}\n\nexport type EventHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  emit: (evt: EmblaEventType) => EventHandlerType\n  on: (evt: EmblaEventType, cb: CallbackType) => EventHandlerType\n  off: (evt: EmblaEventType, cb: CallbackType) => EventHandlerType\n  clear: () => void\n}\n\nexport function EventHandler(): EventHandlerType {\n  let listeners: ListenersType = {}\n  let api: EmblaCarouselType\n\n  function init(emblaApi: EmblaCarouselType): void {\n    api = emblaApi\n  }\n\n  function getListeners(evt: EmblaEventType): CallbackType[] {\n    return listeners[evt] || []\n  }\n\n  function emit(evt: EmblaEventType): EventHandlerType {\n    getListeners(evt).forEach((e) => e(api, evt))\n    return self\n  }\n\n  function on(evt: EmblaEventType, cb: CallbackType): EventHandlerType {\n    listeners[evt] = getListeners(evt).concat([cb])\n    return self\n  }\n\n  function off(evt: EmblaEventType, cb: CallbackType): EventHandlerType {\n    listeners[evt] = getListeners(evt).filter((e) => e !== cb)\n    return self\n  }\n\n  function clear(): void {\n    listeners = {}\n  }\n\n  const self: EventHandlerType = {\n    init,\n    emit,\n    off,\n    on,\n    clear\n  }\n  return self\n}\n","import { AlignmentOptionType } from './Alignment'\nimport { AxisDirectionOptionType, AxisOptionType } from './Axis'\nimport { SlidesToScrollOptionType } from './SlidesToScroll'\nimport { ScrollContainOptionType } from './ScrollContain'\nimport { DragHandlerOptionType } from './DragHandler'\nimport { ResizeHandlerOptionType } from './ResizeHandler'\nimport { SlidesHandlerOptionType } from './SlidesHandler'\nimport { SlidesInViewOptionsType } from './SlidesInView'\n\nexport type LooseOptionsType = {\n  [key: string]: unknown\n}\n\nexport type CreateOptionsType<Type extends LooseOptionsType> = Type & {\n  active: boolean\n  breakpoints: {\n    [key: string]: Omit<Partial<CreateOptionsType<Type>>, 'breakpoints'>\n  }\n}\n\nexport type OptionsType = CreateOptionsType<{\n  align: AlignmentOptionType\n  axis: AxisOptionType\n  container: string | HTMLElement | null\n  slides: string | HTMLElement[] | NodeListOf<HTMLElement> | null\n  containScroll: ScrollContainOptionType\n  direction: AxisDirectionOptionType\n  slidesToScroll: SlidesToScrollOptionType\n  dragFree: boolean\n  dragThreshold: number\n  inViewThreshold: SlidesInViewOptionsType\n  loop: boolean\n  skipSnaps: boolean\n  duration: number\n  startIndex: number\n  watchDrag: DragHandlerOptionType\n  watchResize: ResizeHandlerOptionType\n  watchSlides: SlidesHandlerOptionType\n}>\n\nexport const defaultOptions: OptionsType = {\n  align: 'center',\n  axis: 'x',\n  container: null,\n  slides: null,\n  containScroll: 'trimSnaps',\n  direction: 'ltr',\n  slidesToScroll: 1,\n  inViewThreshold: 0,\n  breakpoints: {},\n  dragFree: false,\n  dragThreshold: 10,\n  loop: false,\n  skipSnaps: false,\n  duration: 25,\n  startIndex: 0,\n  active: true,\n  watchDrag: true,\n  watchResize: true,\n  watchSlides: true\n}\n\nexport type EmblaOptionsType = Partial<OptionsType>\n","import { LooseOptionsType, CreateOptionsType } from './Options'\nimport { objectKeys, objectsMergeDeep, WindowType } from './utils'\n\ntype OptionsType = Partial<CreateOptionsType<LooseOptionsType>>\n\nexport type OptionsHandlerType = {\n  mergeOptions: <TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB?: TypeB\n  ) => TypeA\n  optionsAtMedia: <Type extends OptionsType>(options: Type) => Type\n  optionsMediaQueries: (optionsList: OptionsType[]) => MediaQueryList[]\n}\n\nexport function OptionsHandler(ownerWindow: WindowType): OptionsHandlerType {\n  function mergeOptions<TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB?: TypeB\n  ): TypeA {\n    return <TypeA>objectsMergeDeep(optionsA, optionsB || {})\n  }\n\n  function optionsAtMedia<Type extends OptionsType>(options: Type): Type {\n    const optionsAtMedia = options.breakpoints || {}\n    const matchedMediaOptions = objectKeys(optionsAtMedia)\n      .filter((media) => ownerWindow.matchMedia(media).matches)\n      .map((media) => optionsAtMedia[media])\n      .reduce((a, mediaOption) => mergeOptions(a, mediaOption), {})\n\n    return mergeOptions(options, matchedMediaOptions)\n  }\n\n  function optionsMediaQueries(optionsList: OptionsType[]): MediaQueryList[] {\n    return optionsList\n      .map((options) => objectKeys(options.breakpoints || {}))\n      .reduce((acc, mediaQueries) => acc.concat(mediaQueries), [])\n      .map(ownerWindow.matchMedia)\n  }\n\n  const self: OptionsHandlerType = {\n    mergeOptions,\n    optionsAtMedia,\n    optionsMediaQueries\n  }\n  return self\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\nimport { OptionsHandlerType } from './OptionsHandler'\nimport { EmblaPluginsType, EmblaPluginType } from './Plugins'\n\nexport type PluginsHandlerType = {\n  init: (\n    emblaApi: EmblaCarouselType,\n    plugins: EmblaPluginType[]\n  ) => EmblaPluginsType\n  destroy: () => void\n}\n\nexport function PluginsHandler(\n  optionsHandler: OptionsHandlerType\n): PluginsHandlerType {\n  let activePlugins: EmblaPluginType[] = []\n\n  function init(\n    emblaApi: EmblaCarouselType,\n    plugins: EmblaPluginType[]\n  ): EmblaPluginsType {\n    activePlugins = plugins.filter(\n      ({ options }) => optionsHandler.optionsAtMedia(options).active !== false\n    )\n    activePlugins.forEach((plugin) => plugin.init(emblaApi, optionsHandler))\n\n    return plugins.reduce(\n      (map, plugin) => Object.assign(map, { [plugin.name]: plugin }),\n      {}\n    )\n  }\n\n  function destroy(): void {\n    activePlugins = activePlugins.filter((plugin) => plugin.destroy())\n  }\n\n  const self: PluginsHandlerType = {\n    init,\n    destroy\n  }\n  return self\n}\n","import { Engine, EngineType } from './Engine'\nimport { EventStore } from './EventStore'\nimport { EventHandler, EventHandlerType } from './EventHandler'\nimport { defaultOptions, EmblaOptionsType, OptionsType } from './Options'\nimport { OptionsHandler } from './OptionsHandler'\nimport { PluginsHandler } from './PluginsHandler'\nimport { EmblaPluginsType, EmblaPluginType } from './Plugins'\nimport { isString, WindowType } from './utils'\n\nexport type EmblaCarouselType = {\n  canScrollNext: () => boolean\n  canScrollPrev: () => boolean\n  containerNode: () => HTMLElement\n  internalEngine: () => EngineType\n  destroy: () => void\n  off: EventHandlerType['off']\n  on: EventHandlerType['on']\n  emit: EventHandlerType['emit']\n  plugins: () => EmblaPluginsType\n  previousScrollSnap: () => number\n  reInit: (options?: EmblaOptionsType, plugins?: EmblaPluginType[]) => void\n  rootNode: () => HTMLElement\n  scrollNext: (jump?: boolean) => void\n  scrollPrev: (jump?: boolean) => void\n  scrollProgress: () => number\n  scrollSnapList: () => number[]\n  scrollTo: (index: number, jump?: boolean) => void\n  selectedScrollSnap: () => number\n  slideNodes: () => HTMLElement[]\n  slidesInView: () => number[]\n  slidesNotInView: () => number[]\n}\n\nfunction EmblaCarousel(\n  root: HTMLElement,\n  userOptions?: EmblaOptionsType,\n  userPlugins?: EmblaPluginType[]\n): EmblaCarouselType {\n  const ownerDocument = root.ownerDocument\n  const ownerWindow = <WindowType>ownerDocument.defaultView\n  const optionsHandler = OptionsHandler(ownerWindow)\n  const pluginsHandler = PluginsHandler(optionsHandler)\n  const mediaHandlers = EventStore()\n  const eventHandler = EventHandler()\n  const { mergeOptions, optionsAtMedia, optionsMediaQueries } = optionsHandler\n  const { on, off, emit } = eventHandler\n  const reInit = reActivate\n\n  let destroyed = false\n  let engine: EngineType\n  let optionsBase = mergeOptions(defaultOptions, EmblaCarousel.globalOptions)\n  let options = mergeOptions(optionsBase)\n  let pluginList: EmblaPluginType[] = []\n  let pluginApis: EmblaPluginsType\n\n  let container: HTMLElement\n  let slides: HTMLElement[]\n\n  function storeElements(): void {\n    const { container: userContainer, slides: userSlides } = options\n\n    const customContainer = isString(userContainer)\n      ? root.querySelector(userContainer)\n      : userContainer\n    container = <HTMLElement>(customContainer || root.children[0])\n\n    const customSlides = isString(userSlides)\n      ? container.querySelectorAll(userSlides)\n      : userSlides\n    slides = <HTMLElement[]>[].slice.call(customSlides || container.children)\n  }\n\n  function createEngine(options: OptionsType): EngineType {\n    const engine = Engine(\n      root,\n      container,\n      slides,\n      ownerDocument,\n      ownerWindow,\n      options,\n      eventHandler\n    )\n\n    if (options.loop && !engine.slideLooper.canLoop()) {\n      const optionsWithoutLoop = Object.assign({}, options, { loop: false })\n      return createEngine(optionsWithoutLoop)\n    }\n    return engine\n  }\n\n  function activate(\n    withOptions?: EmblaOptionsType,\n    withPlugins?: EmblaPluginType[]\n  ): void {\n    if (destroyed) return\n\n    optionsBase = mergeOptions(optionsBase, withOptions)\n    options = optionsAtMedia(optionsBase)\n    pluginList = withPlugins || pluginList\n\n    storeElements()\n\n    engine = createEngine(options)\n\n    optionsMediaQueries([\n      optionsBase,\n      ...pluginList.map(({ options }) => options)\n    ]).forEach((query) => mediaHandlers.add(query, 'change', reActivate))\n\n    if (!options.active) return\n\n    engine.translate.to(engine.location.get())\n    engine.animation.init()\n    engine.slidesInView.init()\n    engine.slideFocus.init()\n    engine.eventHandler.init(self)\n    engine.resizeHandler.init(self)\n    engine.slidesHandler.init(self)\n\n    if (engine.options.loop) engine.slideLooper.loop()\n    if (container.offsetParent && slides.length) engine.dragHandler.init(self)\n\n    pluginApis = pluginsHandler.init(self, pluginList)\n  }\n\n  function reActivate(\n    withOptions?: EmblaOptionsType,\n    withPlugins?: EmblaPluginType[]\n  ): void {\n    const startIndex = selectedScrollSnap()\n    deActivate()\n    activate(mergeOptions({ startIndex }, withOptions), withPlugins)\n    eventHandler.emit('reInit')\n  }\n\n  function deActivate(): void {\n    engine.dragHandler.destroy()\n    engine.eventStore.clear()\n    engine.translate.clear()\n    engine.slideLooper.clear()\n    engine.resizeHandler.destroy()\n    engine.slidesHandler.destroy()\n    engine.slidesInView.destroy()\n    engine.animation.destroy()\n    pluginsHandler.destroy()\n    mediaHandlers.clear()\n  }\n\n  function destroy(): void {\n    if (destroyed) return\n    destroyed = true\n    mediaHandlers.clear()\n    deActivate()\n    eventHandler.emit('destroy')\n    eventHandler.clear()\n  }\n\n  function scrollTo(index: number, jump?: boolean, direction?: number): void {\n    if (!options.active || destroyed) return\n    engine.scrollBody\n      .useBaseFriction()\n      .useDuration(jump === true ? 0 : options.duration)\n    engine.scrollTo.index(index, direction || 0)\n  }\n\n  function scrollNext(jump?: boolean): void {\n    const next = engine.index.add(1).get()\n    scrollTo(next, jump, -1)\n  }\n\n  function scrollPrev(jump?: boolean): void {\n    const prev = engine.index.add(-1).get()\n    scrollTo(prev, jump, 1)\n  }\n\n  function canScrollNext(): boolean {\n    const next = engine.index.add(1).get()\n    return next !== selectedScrollSnap()\n  }\n\n  function canScrollPrev(): boolean {\n    const prev = engine.index.add(-1).get()\n    return prev !== selectedScrollSnap()\n  }\n\n  function scrollSnapList(): number[] {\n    return engine.scrollSnapList\n  }\n\n  function scrollProgress(): number {\n    return engine.scrollProgress.get(engine.location.get())\n  }\n\n  function selectedScrollSnap(): number {\n    return engine.index.get()\n  }\n\n  function previousScrollSnap(): number {\n    return engine.indexPrevious.get()\n  }\n\n  function slidesInView(): number[] {\n    return engine.slidesInView.get()\n  }\n\n  function slidesNotInView(): number[] {\n    return engine.slidesInView.get(false)\n  }\n\n  function plugins(): EmblaPluginsType {\n    return pluginApis\n  }\n\n  function internalEngine(): EngineType {\n    return engine\n  }\n\n  function rootNode(): HTMLElement {\n    return root\n  }\n\n  function containerNode(): HTMLElement {\n    return container\n  }\n\n  function slideNodes(): HTMLElement[] {\n    return slides\n  }\n\n  const self: EmblaCarouselType = {\n    canScrollNext,\n    canScrollPrev,\n    containerNode,\n    internalEngine,\n    destroy,\n    off,\n    on,\n    emit,\n    plugins,\n    previousScrollSnap,\n    reInit,\n    rootNode,\n    scrollNext,\n    scrollPrev,\n    scrollProgress,\n    scrollSnapList,\n    scrollTo,\n    selectedScrollSnap,\n    slideNodes,\n    slidesInView,\n    slidesNotInView\n  }\n\n  activate(userOptions, userPlugins)\n  setTimeout(() => eventHandler.emit('init'), 0)\n  return self\n}\n\ndeclare namespace EmblaCarousel {\n  let globalOptions: EmblaOptionsType | undefined\n}\n\nEmblaCarousel.globalOptions = undefined\n\nexport default EmblaCarousel\n"],"names":["isNumber","subject","isString","isBoolean","isObject","Object","prototype","toString","call","mathAbs","n","Math","abs","mathSign","sign","deltaAbs","valueB","valueA","factorAbs","diff","arrayKeys","array","objectKeys","map","Number","arrayLast","arrayLastIndex","max","length","arrayIsLastIndex","index","arrayFromNumber","startAt","Array","from","_","i","object","keys","objectsMergeDeep","objectA","objectB","reduce","mergedObjects","currentObject","forEach","key","areObjects","isMouseEvent","evt","ownerWindow","MouseEvent","Alignment","align","viewSize","predefined","start","center","end","measure","self","EventStore","listeners","add","node","type","handler","options","passive","removeListener","addEventListener","removeEventListener","legacyMediaQueryList","addListener","push","clear","filter","remove","Animations","ownerDocument","update","documentVisibleHandler","timeStep","lastTimeStamp","animationFrame","lag","init","hidden","reset","destroy","stop","animate","timeStamp","timeElapsed","requestAnimationFrame","cancelAnimationFrame","Axis","axis","contentDirection","isRightToLeft","isVertical","scroll","cross","startEdge","getStartEdge","endEdge","getEndEdge","measureSize","nodeRect","height","width","direction","Limit","min","reachedMin","reachedMax","reachedAny","constrain","removeOffset","ceil","Counter","loop","loopEnd","counter","withinLimit","get","set","clone","DragHandler","rootNode","target","dragTracker","location","animation","scrollTo","scrollBody","scrollTarget","eventHandler","percentOfView","dragFree","dragThreshold","skipSnaps","baseFriction","watchDrag","crossAxis","focusNodes","nonPassiveEvent","initEvents","dragEvents","goToNextThreshold","snapForceBoost","mouse","touch","freeForceBoost","baseSpeed","isMoving","startScroll","startCross","pointerIsDown","preventScroll","preventClick","isMouse","emblaApi","downIfAllowed","down","preventDefault","undefined","up","click","addDragEvents","move","isFocusNode","nodeName","includes","forceBoost","boost","allowedForce","force","targetChanged","next","baseForce","byDistance","distance","byIndex","isMouseEvt","buttons","button","pointerDown","useFriction","useDuration","readPoint","emit","isTouchEvt","touches","lastScroll","lastCross","diffScroll","diffCross","cancelable","pointerMove","currentLocation","rawForce","pointerUp","forceFactor","speed","friction","stopPropagation","DragTracker","logInterval","startEvent","lastEvent","readTime","evtAxis","property","coord","expired","diffDrag","diffTime","isFlick","NodeRects","offsetTop","offsetLeft","offsetWidth","offsetHeight","offset","top","right","bottom","left","PercentOfView","ResizeHandler","container","slides","watchResize","nodeRects","resizeObserver","containerSize","slideSizes","destroyed","readSize","defaultCallback","entries","entry","isContainer","slideIndex","indexOf","lastSize","newSize","diffSize","reInit","ResizeObserver","observeNodes","concat","observe","disconnect","ScrollBody","baseDuration","bodyVelocity","scrollDirection","scrollDuration","scrollFriction","rawLocation","rawLocationPrevious","seek","isInstant","directionDiff","settled","duration","velocity","useBaseDuration","useBaseFriction","ScrollBounds","limit","pullBackThreshold","edgeOffsetTolerance","frictionLimit","disabled","shouldConstrain","edge","diffToEdge","diffToTarget","subtract","toggleActive","active","ScrollContain","contentSize","snapsAligned","containScroll","pixelTolerance","scrollBounds","snapsBounded","measureBounded","scrollContainLimit","findScrollContainLimit","snapsContained","measureContained","usePixelTolerance","bound","snap","startSnap","endSnap","lastIndexOf","snapAligned","isFirst","isLast","scrollBound","parseFloat","toFixed","slice","ScrollLimit","scrollSnaps","ScrollLooper","vectors","jointSafety","shouldLoop","loopDistance","v","ScrollProgress","ScrollSnaps","alignment","containerRect","slideRects","slidesToScroll","groupSlides","alignments","measureSizes","snaps","measureUnaligned","measureAligned","rects","rect","g","SlideRegistry","containSnaps","slideIndexes","slideRegistry","createSlideRegistry","groupedSlideIndexes","doNotContain","group","groups","range","ScrollTarget","targetVector","minDistance","distances","sort","a","b","findTargetSnap","ascDiffsToSnaps","shortcut","d1","d2","targets","matchingTargets","t","diffToSnap","targetSnapDistance","reachedBound","snapDistance","ScrollTo","indexCurrent","indexPrevious","distanceDiff","indexDiff","targetIndex","SlideFocus","root","eventStore","lastTabPressTime","document","registerTabPress","addSlideFocusEvent","event","code","Date","getTime","slide","focus","nowTime","scrollLeft","findIndex","capture","Vector1D","initialValue","value","normalizeInput","Translate","translate","x","y","containerStyle","style","to","transform","getAttribute","removeAttribute","SlideLooper","slideSizesWithGaps","roundingSafety","ascItems","descItems","reverse","loopPoints","startPoints","endPoints","removeSlideSizes","indexes","slidesInGap","gap","remainingGap","findSlideBounds","findLoopPoints","isEndEdge","slideBounds","initial","altered","boundEdge","loopPoint","slideLocation","canLoop","every","otherIndexes","shiftLocation","SlidesHandler","watchSlides","mutationObserver","mutations","mutation","MutationObserver","childList","SlidesInView","threshold","intersectionEntryMap","inViewCache","notInViewCache","intersectionObserver","IntersectionObserver","parentElement","createInViewList","inView","list","parseInt","isIntersecting","inViewMatch","notInViewMatch","SlideSizes","readEdgeGap","withEdgeGap","startGap","measureStartGap","endGap","measureEndGap","measureWithGaps","slideRect","getComputedStyle","getPropertyValue","SlidesToScroll","groupByNumber","byNumber","groupSize","bySize","rectB","rectA","edgeA","edgeB","gapA","gapB","chunkSize","currentSize","previousSize","Engine","scrollAxis","startIndex","inViewThreshold","dragHandler","scrollLooper","slideLooper","shouldSettle","withinBounds","hasSettled","engine","startLocation","scrollProgress","slidesInView","slideFocus","resizeHandler","scrollSnapList","slidesHandler","EventHandler","api","getListeners","e","on","cb","off","defaultOptions","breakpoints","OptionsHandler","mergeOptions","optionsA","optionsB","optionsAtMedia","matchedMediaOptions","media","matchMedia","matches","mediaOption","optionsMediaQueries","optionsList","acc","mediaQueries","PluginsHandler","optionsHandler","activePlugins","plugins","plugin","assign","name","EmblaCarousel","userOptions","userPlugins","defaultView","pluginsHandler","mediaHandlers","reActivate","optionsBase","globalOptions","pluginList","pluginApis","storeElements","userContainer","userSlides","customContainer","querySelector","children","customSlides","querySelectorAll","createEngine","optionsWithoutLoop","activate","withOptions","withPlugins","query","offsetParent","selectedScrollSnap","deActivate","jump","scrollNext","scrollPrev","prev","canScrollNext","canScrollPrev","previousScrollSnap","slidesNotInView","internalEngine","containerNode","slideNodes","setTimeout"],"mappings":"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"}